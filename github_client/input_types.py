# Generated by ariadne-codegen on 2023-09-01 12:40
# Source: schema/github_api.schema

from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import (
    ActorType,
    AuditLogOrderField,
    CheckAnnotationLevel,
    CheckConclusionState,
    CheckRunType,
    CheckStatusState,
    CommitContributionOrderField,
    DeploymentOrderField,
    DeploymentStatusState,
    DiffSide,
    DiscussionCloseReason,
    DiscussionOrderField,
    DiscussionPollOptionOrderField,
    DismissReason,
    EnterpriseAdministratorInvitationOrderField,
    EnterpriseAdministratorRole,
    EnterpriseAllowPrivateRepositoryForkingPolicyValue,
    EnterpriseDefaultRepositoryPermissionSettingValue,
    EnterpriseEnabledDisabledSettingValue,
    EnterpriseEnabledSettingValue,
    EnterpriseMemberOrderField,
    EnterpriseMembersCanCreateRepositoriesSettingValue,
    EnterpriseMembersCanMakePurchasesSettingValue,
    EnterpriseServerInstallationOrderField,
    EnterpriseServerUserAccountEmailOrderField,
    EnterpriseServerUserAccountOrderField,
    EnterpriseServerUserAccountsUploadOrderField,
    EnvironmentOrderField,
    GistOrderField,
    IpAllowListEnabledSettingValue,
    IpAllowListEntryOrderField,
    IpAllowListForInstalledAppsEnabledSettingValue,
    IssueClosedStateReason,
    IssueCommentOrderField,
    IssueOrderField,
    IssueState,
    LabelOrderField,
    LanguageOrderField,
    LockReason,
    MannequinOrderField,
    MigrationSourceType,
    MilestoneOrderField,
    NotificationRestrictionSettingValue,
    OrderDirection,
    OrganizationMemberRole,
    OrganizationOrderField,
    OrgEnterpriseOwnerOrderField,
    PackageFileOrderField,
    PackageOrderField,
    PackageVersionOrderField,
    ProjectOrderField,
    ProjectState,
    ProjectTemplate,
    ProjectV2CustomFieldType,
    ProjectV2FieldOrderField,
    ProjectV2ItemFieldValueOrderField,
    ProjectV2ItemOrderField,
    ProjectV2OrderField,
    ProjectV2Roles,
    ProjectV2SingleSelectFieldOptionColor,
    ProjectV2State,
    ProjectV2ViewOrderField,
    ProjectV2WorkflowsOrderField,
    PullRequestBranchUpdateMethod,
    PullRequestMergeMethod,
    PullRequestOrderField,
    PullRequestReviewEvent,
    PullRequestReviewThreadSubjectType,
    PullRequestUpdateState,
    ReactionContent,
    ReactionOrderField,
    RefOrderField,
    ReleaseOrderField,
    ReportedContentClassifiers,
    RepositoryInteractionLimit,
    RepositoryInteractionLimitExpiry,
    RepositoryInvitationOrderField,
    RepositoryMigrationOrderDirection,
    RepositoryMigrationOrderField,
    RepositoryOrderField,
    RepositoryPermission,
    RepositoryRulesetBypassActorBypassMode,
    RepositoryRulesetTarget,
    RepositoryRuleType,
    RepositoryVisibility,
    RequestableCheckStatusState,
    RoleInOrganization,
    RuleEnforcement,
    SamlDigestAlgorithm,
    SamlSignatureAlgorithm,
    SavedReplyOrderField,
    SecurityAdvisoryIdentifierType,
    SecurityAdvisoryOrderField,
    SecurityVulnerabilityOrderField,
    SponsorableOrderField,
    SponsorOrderField,
    SponsorsActivityOrderField,
    SponsorsCountryOrRegionCode,
    SponsorshipNewsletterOrderField,
    SponsorshipOrderField,
    SponsorshipPrivacy,
    SponsorsTierOrderField,
    StarOrderField,
    SubscriptionState,
    TeamDiscussionCommentOrderField,
    TeamDiscussionOrderField,
    TeamMemberOrderField,
    TeamOrderField,
    TeamRepositoryOrderField,
    TeamReviewAssignmentAlgorithm,
    TopicSuggestionDeclineReason,
    UserStatusOrderField,
    VerifiableDomainOrderField,
    WorkflowRunOrderField,
)


class AbortQueuedMigrationsInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    owner_id: str = Field(alias="ownerId")


class AcceptEnterpriseAdministratorInvitationInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    invitation_id: str = Field(alias="invitationId")


class AcceptTopicSuggestionInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    name: str
    repository_id: str = Field(alias="repositoryId")


class AddAssigneesToAssignableInput(BaseModel):
    assignable_id: str = Field(alias="assignableId")
    assignee_ids: List[str] = Field(alias="assigneeIds")
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)


class AddCommentInput(BaseModel):
    body: str
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    subject_id: str = Field(alias="subjectId")


class AddDiscussionCommentInput(BaseModel):
    body: str
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    discussion_id: str = Field(alias="discussionId")
    reply_to_id: Optional[str] = Field(alias="replyToId", default=None)


class AddDiscussionPollVoteInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    poll_option_id: str = Field(alias="pollOptionId")


class AddEnterpriseOrganizationMemberInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    enterprise_id: str = Field(alias="enterpriseId")
    organization_id: str = Field(alias="organizationId")
    role: Optional[OrganizationMemberRole] = None
    user_ids: List[str] = Field(alias="userIds")


class AddEnterpriseSupportEntitlementInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    enterprise_id: str = Field(alias="enterpriseId")
    login: str


class AddLabelsToLabelableInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    label_ids: List[str] = Field(alias="labelIds")
    labelable_id: str = Field(alias="labelableId")


class AddProjectCardInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    content_id: Optional[str] = Field(alias="contentId", default=None)
    note: Optional[str] = None
    project_column_id: str = Field(alias="projectColumnId")


class AddProjectColumnInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    name: str
    project_id: str = Field(alias="projectId")


class AddProjectV2DraftIssueInput(BaseModel):
    assignee_ids: Optional[List[str]] = Field(alias="assigneeIds", default=None)
    body: Optional[str] = None
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    project_id: str = Field(alias="projectId")
    title: str


class AddProjectV2ItemByIdInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    content_id: str = Field(alias="contentId")
    project_id: str = Field(alias="projectId")


class AddPullRequestReviewCommentInput(BaseModel):
    body: Optional[str] = None
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    commit_o_i_d: Optional[Any] = Field(alias="commitOID", default=None)
    in_reply_to: Optional[str] = Field(alias="inReplyTo", default=None)
    path: Optional[str] = None
    position: Optional[int] = None
    pull_request_id: Optional[str] = Field(alias="pullRequestId", default=None)
    pull_request_review_id: Optional[str] = Field(alias="pullRequestReviewId", default=None)


class AddPullRequestReviewInput(BaseModel):
    body: Optional[str] = None
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    comments: Optional[List[Optional["DraftPullRequestReviewComment"]]] = None
    commit_o_i_d: Optional[Any] = Field(alias="commitOID", default=None)
    event: Optional[PullRequestReviewEvent] = None
    pull_request_id: str = Field(alias="pullRequestId")
    threads: Optional[List[Optional["DraftPullRequestReviewThread"]]] = None


class AddPullRequestReviewThreadInput(BaseModel):
    body: str
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    line: Optional[int] = None
    path: str
    pull_request_id: Optional[str] = Field(alias="pullRequestId", default=None)
    pull_request_review_id: Optional[str] = Field(alias="pullRequestReviewId", default=None)
    side: Optional[DiffSide] = DiffSide.RIGHT
    start_line: Optional[int] = Field(alias="startLine", default=None)
    start_side: Optional[DiffSide] = Field(alias="startSide", default=DiffSide.RIGHT)
    subject_type: Optional[PullRequestReviewThreadSubjectType] = Field(
        alias="subjectType", default=PullRequestReviewThreadSubjectType.LINE
    )


class AddPullRequestReviewThreadReplyInput(BaseModel):
    body: str
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    pull_request_review_id: Optional[str] = Field(alias="pullRequestReviewId", default=None)
    pull_request_review_thread_id: str = Field(alias="pullRequestReviewThreadId")


class AddReactionInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    content: ReactionContent
    subject_id: str = Field(alias="subjectId")


class AddStarInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    starrable_id: str = Field(alias="starrableId")


class AddUpvoteInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    subject_id: str = Field(alias="subjectId")


class AddVerifiableDomainInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    domain: Any
    owner_id: str = Field(alias="ownerId")


class ApproveDeploymentsInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    comment: Optional[str] = ""
    environment_ids: List[str] = Field(alias="environmentIds")
    workflow_run_id: str = Field(alias="workflowRunId")


class ApproveVerifiableDomainInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    id: str


class ArchiveProjectV2ItemInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    item_id: str = Field(alias="itemId")
    project_id: str = Field(alias="projectId")


class ArchiveRepositoryInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    repository_id: str = Field(alias="repositoryId")


class AuditLogOrder(BaseModel):
    direction: Optional[OrderDirection] = None
    field: Optional[AuditLogOrderField] = None


class BranchNamePatternParametersInput(BaseModel):
    name: Optional[str] = None
    negate: Optional[bool] = None
    operator: str
    pattern: str


class BulkSponsorship(BaseModel):
    amount: int
    sponsorable_id: Optional[str] = Field(alias="sponsorableId", default=None)
    sponsorable_login: Optional[str] = Field(alias="sponsorableLogin", default=None)


class CancelEnterpriseAdminInvitationInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    invitation_id: str = Field(alias="invitationId")


class CancelSponsorshipInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    sponsor_id: Optional[str] = Field(alias="sponsorId", default=None)
    sponsor_login: Optional[str] = Field(alias="sponsorLogin", default=None)
    sponsorable_id: Optional[str] = Field(alias="sponsorableId", default=None)
    sponsorable_login: Optional[str] = Field(alias="sponsorableLogin", default=None)


class ChangeUserStatusInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    emoji: Optional[str] = None
    expires_at: Optional[Any] = Field(alias="expiresAt", default=None)
    limited_availability: Optional[bool] = Field(alias="limitedAvailability", default=False)
    message: Optional[str] = None
    organization_id: Optional[str] = Field(alias="organizationId", default=None)


class CheckAnnotationData(BaseModel):
    annotation_level: CheckAnnotationLevel = Field(alias="annotationLevel")
    location: "CheckAnnotationRange"
    message: str
    path: str
    raw_details: Optional[str] = Field(alias="rawDetails", default=None)
    title: Optional[str] = None


class CheckAnnotationRange(BaseModel):
    end_column: Optional[int] = Field(alias="endColumn", default=None)
    end_line: int = Field(alias="endLine")
    start_column: Optional[int] = Field(alias="startColumn", default=None)
    start_line: int = Field(alias="startLine")


class CheckRunAction(BaseModel):
    description: str
    identifier: str
    label: str


class CheckRunFilter(BaseModel):
    app_id: Optional[int] = Field(alias="appId", default=None)
    check_name: Optional[str] = Field(alias="checkName", default=None)
    check_type: Optional[CheckRunType] = Field(alias="checkType", default=None)
    conclusions: Optional[List[CheckConclusionState]] = None
    status: Optional[CheckStatusState] = None
    statuses: Optional[List[CheckStatusState]] = None


class CheckRunOutput(BaseModel):
    annotations: Optional[List["CheckAnnotationData"]] = None
    images: Optional[List["CheckRunOutputImage"]] = None
    summary: str
    text: Optional[str] = None
    title: str


class CheckRunOutputImage(BaseModel):
    alt: str
    caption: Optional[str] = None
    image_url: Any = Field(alias="imageUrl")


class CheckSuiteAutoTriggerPreference(BaseModel):
    app_id: str = Field(alias="appId")
    setting: bool


class CheckSuiteFilter(BaseModel):
    app_id: Optional[int] = Field(alias="appId", default=None)
    check_name: Optional[str] = Field(alias="checkName", default=None)


class ClearLabelsFromLabelableInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    labelable_id: str = Field(alias="labelableId")


class ClearProjectV2ItemFieldValueInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    field_id: str = Field(alias="fieldId")
    item_id: str = Field(alias="itemId")
    project_id: str = Field(alias="projectId")


class CloneProjectInput(BaseModel):
    body: Optional[str] = None
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    include_workflows: bool = Field(alias="includeWorkflows")
    name: str
    public: Optional[bool] = None
    source_id: str = Field(alias="sourceId")
    target_owner_id: str = Field(alias="targetOwnerId")


class CloneTemplateRepositoryInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    description: Optional[str] = None
    include_all_branches: Optional[bool] = Field(alias="includeAllBranches", default=False)
    name: str
    owner_id: str = Field(alias="ownerId")
    repository_id: str = Field(alias="repositoryId")
    visibility: RepositoryVisibility


class CloseDiscussionInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    discussion_id: str = Field(alias="discussionId")
    reason: Optional[DiscussionCloseReason] = DiscussionCloseReason.RESOLVED


class CloseIssueInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    issue_id: str = Field(alias="issueId")
    state_reason: Optional[IssueClosedStateReason] = Field(alias="stateReason", default=None)


class ClosePullRequestInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    pull_request_id: str = Field(alias="pullRequestId")


class CommitAuthor(BaseModel):
    emails: Optional[List[str]] = None
    id: Optional[str] = None


class CommitAuthorEmailPatternParametersInput(BaseModel):
    name: Optional[str] = None
    negate: Optional[bool] = None
    operator: str
    pattern: str


class CommitContributionOrder(BaseModel):
    direction: OrderDirection
    field: CommitContributionOrderField


class CommitMessage(BaseModel):
    body: Optional[str] = None
    headline: str


class CommitMessagePatternParametersInput(BaseModel):
    name: Optional[str] = None
    negate: Optional[bool] = None
    operator: str
    pattern: str


class CommittableBranch(BaseModel):
    branch_name: Optional[str] = Field(alias="branchName", default=None)
    id: Optional[str] = None
    repository_name_with_owner: Optional[str] = Field(alias="repositoryNameWithOwner", default=None)


class CommitterEmailPatternParametersInput(BaseModel):
    name: Optional[str] = None
    negate: Optional[bool] = None
    operator: str
    pattern: str


class ContributionOrder(BaseModel):
    direction: OrderDirection


class ConvertProjectCardNoteToIssueInput(BaseModel):
    body: Optional[str] = None
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    project_card_id: str = Field(alias="projectCardId")
    repository_id: str = Field(alias="repositoryId")
    title: Optional[str] = None


class ConvertPullRequestToDraftInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    pull_request_id: str = Field(alias="pullRequestId")


class CopyProjectV2Input(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    include_draft_issues: Optional[bool] = Field(alias="includeDraftIssues", default=False)
    owner_id: str = Field(alias="ownerId")
    project_id: str = Field(alias="projectId")
    title: str


class CreateAttributionInvitationInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    owner_id: str = Field(alias="ownerId")
    source_id: str = Field(alias="sourceId")
    target_id: str = Field(alias="targetId")


class CreateBranchProtectionRuleInput(BaseModel):
    allows_deletions: Optional[bool] = Field(alias="allowsDeletions", default=None)
    allows_force_pushes: Optional[bool] = Field(alias="allowsForcePushes", default=None)
    blocks_creations: Optional[bool] = Field(alias="blocksCreations", default=None)
    bypass_force_push_actor_ids: Optional[List[str]] = Field(alias="bypassForcePushActorIds", default=None)
    bypass_pull_request_actor_ids: Optional[List[str]] = Field(alias="bypassPullRequestActorIds", default=None)
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    dismisses_stale_reviews: Optional[bool] = Field(alias="dismissesStaleReviews", default=None)
    is_admin_enforced: Optional[bool] = Field(alias="isAdminEnforced", default=None)
    lock_allows_fetch_and_merge: Optional[bool] = Field(alias="lockAllowsFetchAndMerge", default=None)
    lock_branch: Optional[bool] = Field(alias="lockBranch", default=None)
    pattern: str
    push_actor_ids: Optional[List[str]] = Field(alias="pushActorIds", default=None)
    repository_id: str = Field(alias="repositoryId")
    require_last_push_approval: Optional[bool] = Field(alias="requireLastPushApproval", default=None)
    required_approving_review_count: Optional[int] = Field(alias="requiredApprovingReviewCount", default=None)
    required_deployment_environments: Optional[List[str]] = Field(alias="requiredDeploymentEnvironments", default=None)
    required_status_check_contexts: Optional[List[str]] = Field(alias="requiredStatusCheckContexts", default=None)
    required_status_checks: Optional[List["RequiredStatusCheckInput"]] = Field(
        alias="requiredStatusChecks", default=None
    )
    requires_approving_reviews: Optional[bool] = Field(alias="requiresApprovingReviews", default=None)
    requires_code_owner_reviews: Optional[bool] = Field(alias="requiresCodeOwnerReviews", default=None)
    requires_commit_signatures: Optional[bool] = Field(alias="requiresCommitSignatures", default=None)
    requires_conversation_resolution: Optional[bool] = Field(alias="requiresConversationResolution", default=None)
    requires_deployments: Optional[bool] = Field(alias="requiresDeployments", default=None)
    requires_linear_history: Optional[bool] = Field(alias="requiresLinearHistory", default=None)
    requires_status_checks: Optional[bool] = Field(alias="requiresStatusChecks", default=None)
    requires_strict_status_checks: Optional[bool] = Field(alias="requiresStrictStatusChecks", default=None)
    restricts_pushes: Optional[bool] = Field(alias="restrictsPushes", default=None)
    restricts_review_dismissals: Optional[bool] = Field(alias="restrictsReviewDismissals", default=None)
    review_dismissal_actor_ids: Optional[List[str]] = Field(alias="reviewDismissalActorIds", default=None)


class CreateCheckRunInput(BaseModel):
    actions: Optional[List["CheckRunAction"]] = None
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    completed_at: Optional[Any] = Field(alias="completedAt", default=None)
    conclusion: Optional[CheckConclusionState] = None
    details_url: Optional[Any] = Field(alias="detailsUrl", default=None)
    external_id: Optional[str] = Field(alias="externalId", default=None)
    head_sha: Any = Field(alias="headSha")
    name: str
    output: Optional["CheckRunOutput"] = None
    repository_id: str = Field(alias="repositoryId")
    started_at: Optional[Any] = Field(alias="startedAt", default=None)
    status: Optional[RequestableCheckStatusState] = None


class CreateCheckSuiteInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    head_sha: Any = Field(alias="headSha")
    repository_id: str = Field(alias="repositoryId")


class CreateCommitOnBranchInput(BaseModel):
    branch: "CommittableBranch"
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    expected_head_oid: Any = Field(alias="expectedHeadOid")
    file_changes: Optional["FileChanges"] = Field(alias="fileChanges", default=None)
    message: "CommitMessage"


class CreateDeploymentInput(BaseModel):
    auto_merge: Optional[bool] = Field(alias="autoMerge", default=True)
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    description: Optional[str] = ""
    environment: Optional[str] = "production"
    payload: Optional[str] = "{}"
    ref_id: str = Field(alias="refId")
    repository_id: str = Field(alias="repositoryId")
    required_contexts: Optional[List[str]] = Field(alias="requiredContexts", default=None)
    task: Optional[str] = "deploy"


class CreateDeploymentStatusInput(BaseModel):
    auto_inactive: Optional[bool] = Field(alias="autoInactive", default=True)
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    deployment_id: str = Field(alias="deploymentId")
    description: Optional[str] = ""
    environment: Optional[str] = None
    environment_url: Optional[str] = Field(alias="environmentUrl", default="")
    log_url: Optional[str] = Field(alias="logUrl", default="")
    state: DeploymentStatusState


class CreateDiscussionInput(BaseModel):
    body: str
    category_id: str = Field(alias="categoryId")
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    repository_id: str = Field(alias="repositoryId")
    title: str


class CreateEnterpriseOrganizationInput(BaseModel):
    admin_logins: List[str] = Field(alias="adminLogins")
    billing_email: str = Field(alias="billingEmail")
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    enterprise_id: str = Field(alias="enterpriseId")
    login: str
    profile_name: str = Field(alias="profileName")


class CreateEnvironmentInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    name: str
    repository_id: str = Field(alias="repositoryId")


class CreateIpAllowListEntryInput(BaseModel):
    allow_list_value: str = Field(alias="allowListValue")
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    is_active: bool = Field(alias="isActive")
    name: Optional[str] = None
    owner_id: str = Field(alias="ownerId")


class CreateIssueInput(BaseModel):
    assignee_ids: Optional[List[str]] = Field(alias="assigneeIds", default=None)
    body: Optional[str] = None
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    issue_template: Optional[str] = Field(alias="issueTemplate", default=None)
    label_ids: Optional[List[str]] = Field(alias="labelIds", default=None)
    milestone_id: Optional[str] = Field(alias="milestoneId", default=None)
    project_ids: Optional[List[str]] = Field(alias="projectIds", default=None)
    repository_id: str = Field(alias="repositoryId")
    title: str


class CreateLabelInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    color: str
    description: Optional[str] = None
    name: str
    repository_id: str = Field(alias="repositoryId")


class CreateLinkedBranchInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    issue_id: str = Field(alias="issueId")
    name: Optional[str] = None
    oid: Any
    repository_id: Optional[str] = Field(alias="repositoryId", default=None)


class CreateMigrationSourceInput(BaseModel):
    access_token: Optional[str] = Field(alias="accessToken", default=None)
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    github_pat: Optional[str] = Field(alias="githubPat", default=None)
    name: str
    owner_id: str = Field(alias="ownerId")
    type: MigrationSourceType
    url: Optional[str] = None


class CreateProjectInput(BaseModel):
    body: Optional[str] = None
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    name: str
    owner_id: str = Field(alias="ownerId")
    repository_ids: Optional[List[str]] = Field(alias="repositoryIds", default=None)
    template: Optional[ProjectTemplate] = None


class CreateProjectV2FieldInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    data_type: ProjectV2CustomFieldType = Field(alias="dataType")
    name: str
    project_id: str = Field(alias="projectId")
    single_select_options: Optional[List["ProjectV2SingleSelectFieldOptionInput"]] = Field(
        alias="singleSelectOptions", default=None
    )


class CreateProjectV2Input(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    owner_id: str = Field(alias="ownerId")
    repository_id: Optional[str] = Field(alias="repositoryId", default=None)
    team_id: Optional[str] = Field(alias="teamId", default=None)
    title: str


class CreatePullRequestInput(BaseModel):
    base_ref_name: str = Field(alias="baseRefName")
    body: Optional[str] = None
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    draft: Optional[bool] = False
    head_ref_name: str = Field(alias="headRefName")
    head_repository_id: Optional[str] = Field(alias="headRepositoryId", default=None)
    maintainer_can_modify: Optional[bool] = Field(alias="maintainerCanModify", default=True)
    repository_id: str = Field(alias="repositoryId")
    title: str


class CreateRefInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    name: str
    oid: Any
    repository_id: str = Field(alias="repositoryId")


class CreateRepositoryInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    description: Optional[str] = None
    has_issues_enabled: Optional[bool] = Field(alias="hasIssuesEnabled", default=True)
    has_wiki_enabled: Optional[bool] = Field(alias="hasWikiEnabled", default=False)
    homepage_url: Optional[Any] = Field(alias="homepageUrl", default=None)
    name: str
    owner_id: Optional[str] = Field(alias="ownerId", default=None)
    team_id: Optional[str] = Field(alias="teamId", default=None)
    template: Optional[bool] = False
    visibility: RepositoryVisibility


class CreateRepositoryRulesetInput(BaseModel):
    bypass_actors: Optional[List["RepositoryRulesetBypassActorInput"]] = Field(alias="bypassActors", default=None)
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    conditions: "RepositoryRuleConditionsInput"
    enforcement: RuleEnforcement
    name: str
    rules: Optional[List["RepositoryRuleInput"]] = None
    source_id: str = Field(alias="sourceId")
    target: Optional[RepositoryRulesetTarget] = None


class CreateSponsorsListingInput(BaseModel):
    billing_country_or_region_code: Optional[SponsorsCountryOrRegionCode] = Field(
        alias="billingCountryOrRegionCode", default=None
    )
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    contact_email: Optional[str] = Field(alias="contactEmail", default=None)
    fiscal_host_login: Optional[str] = Field(alias="fiscalHostLogin", default=None)
    fiscally_hosted_project_profile_url: Optional[str] = Field(alias="fiscallyHostedProjectProfileUrl", default=None)
    full_description: Optional[str] = Field(alias="fullDescription", default=None)
    residence_country_or_region_code: Optional[SponsorsCountryOrRegionCode] = Field(
        alias="residenceCountryOrRegionCode", default=None
    )
    sponsorable_login: Optional[str] = Field(alias="sponsorableLogin", default=None)


class CreateSponsorsTierInput(BaseModel):
    amount: int
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    description: str
    is_recurring: Optional[bool] = Field(alias="isRecurring", default=True)
    publish: Optional[bool] = False
    repository_id: Optional[str] = Field(alias="repositoryId", default=None)
    repository_name: Optional[str] = Field(alias="repositoryName", default=None)
    repository_owner_login: Optional[str] = Field(alias="repositoryOwnerLogin", default=None)
    sponsorable_id: Optional[str] = Field(alias="sponsorableId", default=None)
    sponsorable_login: Optional[str] = Field(alias="sponsorableLogin", default=None)
    welcome_message: Optional[str] = Field(alias="welcomeMessage", default=None)


class CreateSponsorshipInput(BaseModel):
    amount: Optional[int] = None
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    is_recurring: Optional[bool] = Field(alias="isRecurring", default=None)
    privacy_level: Optional[SponsorshipPrivacy] = Field(alias="privacyLevel", default=SponsorshipPrivacy.PUBLIC)
    receive_emails: Optional[bool] = Field(alias="receiveEmails", default=True)
    sponsor_id: Optional[str] = Field(alias="sponsorId", default=None)
    sponsor_login: Optional[str] = Field(alias="sponsorLogin", default=None)
    sponsorable_id: Optional[str] = Field(alias="sponsorableId", default=None)
    sponsorable_login: Optional[str] = Field(alias="sponsorableLogin", default=None)
    tier_id: Optional[str] = Field(alias="tierId", default=None)


class CreateSponsorshipsInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    privacy_level: Optional[SponsorshipPrivacy] = Field(alias="privacyLevel", default=SponsorshipPrivacy.PUBLIC)
    receive_emails: Optional[bool] = Field(alias="receiveEmails", default=False)
    sponsor_login: str = Field(alias="sponsorLogin")
    sponsorships: List["BulkSponsorship"]


class CreateTeamDiscussionCommentInput(BaseModel):
    body: Optional[str] = None
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    discussion_id: Optional[str] = Field(alias="discussionId", default=None)


class CreateTeamDiscussionInput(BaseModel):
    body: Optional[str] = None
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    private: Optional[bool] = None
    team_id: Optional[str] = Field(alias="teamId", default=None)
    title: Optional[str] = None


class DeclineTopicSuggestionInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    name: str
    reason: TopicSuggestionDeclineReason
    repository_id: str = Field(alias="repositoryId")


class DeleteBranchProtectionRuleInput(BaseModel):
    branch_protection_rule_id: str = Field(alias="branchProtectionRuleId")
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)


class DeleteDeploymentInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    id: str


class DeleteDiscussionCommentInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    id: str


class DeleteDiscussionInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    id: str


class DeleteEnvironmentInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    id: str


class DeleteIpAllowListEntryInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    ip_allow_list_entry_id: str = Field(alias="ipAllowListEntryId")


class DeleteIssueCommentInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    id: str


class DeleteIssueInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    issue_id: str = Field(alias="issueId")


class DeleteLabelInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    id: str


class DeleteLinkedBranchInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    linked_branch_id: str = Field(alias="linkedBranchId")


class DeletePackageVersionInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    package_version_id: str = Field(alias="packageVersionId")


class DeleteProjectCardInput(BaseModel):
    card_id: str = Field(alias="cardId")
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)


class DeleteProjectColumnInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    column_id: str = Field(alias="columnId")


class DeleteProjectInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    project_id: str = Field(alias="projectId")


class DeleteProjectV2FieldInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    field_id: str = Field(alias="fieldId")


class DeleteProjectV2Input(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    project_id: str = Field(alias="projectId")


class DeleteProjectV2ItemInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    item_id: str = Field(alias="itemId")
    project_id: str = Field(alias="projectId")


class DeleteProjectV2WorkflowInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    workflow_id: str = Field(alias="workflowId")


class DeletePullRequestReviewCommentInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    id: str


class DeletePullRequestReviewInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    pull_request_review_id: str = Field(alias="pullRequestReviewId")


class DeleteRefInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    ref_id: str = Field(alias="refId")


class DeleteRepositoryRulesetInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    repository_ruleset_id: str = Field(alias="repositoryRulesetId")


class DeleteTeamDiscussionCommentInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    id: str


class DeleteTeamDiscussionInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    id: str


class DeleteVerifiableDomainInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    id: str


class DeploymentOrder(BaseModel):
    direction: OrderDirection
    field: DeploymentOrderField


class DequeuePullRequestInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    id: str


class DisablePullRequestAutoMergeInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    pull_request_id: str = Field(alias="pullRequestId")


class DiscussionOrder(BaseModel):
    direction: OrderDirection
    field: DiscussionOrderField


class DiscussionPollOptionOrder(BaseModel):
    direction: OrderDirection
    field: DiscussionPollOptionOrderField


class DismissPullRequestReviewInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    message: str
    pull_request_review_id: str = Field(alias="pullRequestReviewId")


class DismissRepositoryVulnerabilityAlertInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    dismiss_reason: DismissReason = Field(alias="dismissReason")
    repository_vulnerability_alert_id: str = Field(alias="repositoryVulnerabilityAlertId")


class DraftPullRequestReviewComment(BaseModel):
    body: str
    path: str
    position: int


class DraftPullRequestReviewThread(BaseModel):
    body: str
    line: int
    path: str
    side: Optional[DiffSide] = DiffSide.RIGHT
    start_line: Optional[int] = Field(alias="startLine", default=None)
    start_side: Optional[DiffSide] = Field(alias="startSide", default=DiffSide.RIGHT)


class EnablePullRequestAutoMergeInput(BaseModel):
    author_email: Optional[str] = Field(alias="authorEmail", default=None)
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    commit_body: Optional[str] = Field(alias="commitBody", default=None)
    commit_headline: Optional[str] = Field(alias="commitHeadline", default=None)
    expected_head_oid: Optional[Any] = Field(alias="expectedHeadOid", default=None)
    merge_method: Optional[PullRequestMergeMethod] = Field(alias="mergeMethod", default=PullRequestMergeMethod.MERGE)
    pull_request_id: str = Field(alias="pullRequestId")


class EnqueuePullRequestInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    expected_head_oid: Optional[Any] = Field(alias="expectedHeadOid", default=None)
    jump: Optional[bool] = None
    pull_request_id: str = Field(alias="pullRequestId")


class EnterpriseAdministratorInvitationOrder(BaseModel):
    direction: OrderDirection
    field: EnterpriseAdministratorInvitationOrderField


class EnterpriseMemberOrder(BaseModel):
    direction: OrderDirection
    field: EnterpriseMemberOrderField


class EnterpriseServerInstallationOrder(BaseModel):
    direction: OrderDirection
    field: EnterpriseServerInstallationOrderField


class EnterpriseServerUserAccountEmailOrder(BaseModel):
    direction: OrderDirection
    field: EnterpriseServerUserAccountEmailOrderField


class EnterpriseServerUserAccountOrder(BaseModel):
    direction: OrderDirection
    field: EnterpriseServerUserAccountOrderField


class EnterpriseServerUserAccountsUploadOrder(BaseModel):
    direction: OrderDirection
    field: EnterpriseServerUserAccountsUploadOrderField


class Environments(BaseModel):
    direction: OrderDirection
    field: EnvironmentOrderField


class FileAddition(BaseModel):
    contents: Any
    path: str


class FileChanges(BaseModel):
    additions: Optional[List["FileAddition"]] = Field(default_factory=lambda: [])
    deletions: Optional[List["FileDeletion"]] = Field(default_factory=lambda: [])


class FileDeletion(BaseModel):
    path: str


class FollowOrganizationInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    organization_id: str = Field(alias="organizationId")


class FollowUserInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    user_id: str = Field(alias="userId")


class GistOrder(BaseModel):
    direction: OrderDirection
    field: GistOrderField


class GrantEnterpriseOrganizationsMigratorRoleInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    enterprise_id: str = Field(alias="enterpriseId")
    login: str


class GrantMigratorRoleInput(BaseModel):
    actor: str
    actor_type: ActorType = Field(alias="actorType")
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    organization_id: str = Field(alias="organizationId")


class ImportProjectInput(BaseModel):
    body: Optional[str] = None
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    column_imports: List["ProjectColumnImport"] = Field(alias="columnImports")
    name: str
    owner_name: str = Field(alias="ownerName")
    public: Optional[bool] = False


class InviteEnterpriseAdminInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    email: Optional[str] = None
    enterprise_id: str = Field(alias="enterpriseId")
    invitee: Optional[str] = None
    role: Optional[EnterpriseAdministratorRole] = None


class IpAllowListEntryOrder(BaseModel):
    direction: OrderDirection
    field: IpAllowListEntryOrderField


class IssueCommentOrder(BaseModel):
    direction: OrderDirection
    field: IssueCommentOrderField


class IssueFilters(BaseModel):
    assignee: Optional[str] = None
    created_by: Optional[str] = Field(alias="createdBy", default=None)
    labels: Optional[List[str]] = None
    mentioned: Optional[str] = None
    milestone: Optional[str] = None
    milestone_number: Optional[str] = Field(alias="milestoneNumber", default=None)
    since: Optional[Any] = None
    states: Optional[List[IssueState]] = None
    viewer_subscribed: Optional[bool] = Field(alias="viewerSubscribed", default=False)


class IssueOrder(BaseModel):
    direction: OrderDirection
    field: IssueOrderField


class LabelOrder(BaseModel):
    direction: OrderDirection
    field: LabelOrderField


class LanguageOrder(BaseModel):
    direction: OrderDirection
    field: LanguageOrderField


class LinkProjectV2ToRepositoryInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    project_id: str = Field(alias="projectId")
    repository_id: str = Field(alias="repositoryId")


class LinkProjectV2ToTeamInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    project_id: str = Field(alias="projectId")
    team_id: str = Field(alias="teamId")


class LinkRepositoryToProjectInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    project_id: str = Field(alias="projectId")
    repository_id: str = Field(alias="repositoryId")


class LockLockableInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    lock_reason: Optional[LockReason] = Field(alias="lockReason", default=None)
    lockable_id: str = Field(alias="lockableId")


class MannequinOrder(BaseModel):
    direction: OrderDirection
    field: MannequinOrderField


class MarkDiscussionCommentAsAnswerInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    id: str


class MarkFileAsViewedInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    path: str
    pull_request_id: str = Field(alias="pullRequestId")


class MarkProjectV2AsTemplateInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    project_id: str = Field(alias="projectId")


class MarkPullRequestReadyForReviewInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    pull_request_id: str = Field(alias="pullRequestId")


class MergeBranchInput(BaseModel):
    author_email: Optional[str] = Field(alias="authorEmail", default=None)
    base: str
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    commit_message: Optional[str] = Field(alias="commitMessage", default=None)
    head: str
    repository_id: str = Field(alias="repositoryId")


class MergePullRequestInput(BaseModel):
    author_email: Optional[str] = Field(alias="authorEmail", default=None)
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    commit_body: Optional[str] = Field(alias="commitBody", default=None)
    commit_headline: Optional[str] = Field(alias="commitHeadline", default=None)
    expected_head_oid: Optional[Any] = Field(alias="expectedHeadOid", default=None)
    merge_method: Optional[PullRequestMergeMethod] = Field(alias="mergeMethod", default=PullRequestMergeMethod.MERGE)
    pull_request_id: str = Field(alias="pullRequestId")


class MilestoneOrder(BaseModel):
    direction: OrderDirection
    field: MilestoneOrderField


class MinimizeCommentInput(BaseModel):
    classifier: ReportedContentClassifiers
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    subject_id: str = Field(alias="subjectId")


class MoveProjectCardInput(BaseModel):
    after_card_id: Optional[str] = Field(alias="afterCardId", default=None)
    card_id: str = Field(alias="cardId")
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    column_id: str = Field(alias="columnId")


class MoveProjectColumnInput(BaseModel):
    after_column_id: Optional[str] = Field(alias="afterColumnId", default=None)
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    column_id: str = Field(alias="columnId")


class OrgEnterpriseOwnerOrder(BaseModel):
    direction: OrderDirection
    field: OrgEnterpriseOwnerOrderField


class OrganizationOrder(BaseModel):
    direction: OrderDirection
    field: OrganizationOrderField


class PackageFileOrder(BaseModel):
    direction: Optional[OrderDirection] = None
    field: Optional[PackageFileOrderField] = None


class PackageOrder(BaseModel):
    direction: Optional[OrderDirection] = None
    field: Optional[PackageOrderField] = None


class PackageVersionOrder(BaseModel):
    direction: Optional[OrderDirection] = None
    field: Optional[PackageVersionOrderField] = None


class PinIssueInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    issue_id: str = Field(alias="issueId")


class ProjectCardImport(BaseModel):
    number: int
    repository: str


class ProjectColumnImport(BaseModel):
    column_name: str = Field(alias="columnName")
    issues: Optional[List["ProjectCardImport"]] = None
    position: int


class ProjectOrder(BaseModel):
    direction: OrderDirection
    field: ProjectOrderField


class ProjectV2Collaborator(BaseModel):
    role: ProjectV2Roles
    team_id: Optional[str] = Field(alias="teamId", default=None)
    user_id: Optional[str] = Field(alias="userId", default=None)


class ProjectV2FieldOrder(BaseModel):
    direction: OrderDirection
    field: ProjectV2FieldOrderField


class ProjectV2FieldValue(BaseModel):
    date: Optional[Any] = None
    iteration_id: Optional[str] = Field(alias="iterationId", default=None)
    number: Optional[float] = None
    single_select_option_id: Optional[str] = Field(alias="singleSelectOptionId", default=None)
    text: Optional[str] = None


class ProjectV2Filters(BaseModel):
    state: Optional[ProjectV2State] = None


class ProjectV2ItemFieldValueOrder(BaseModel):
    direction: OrderDirection
    field: ProjectV2ItemFieldValueOrderField


class ProjectV2ItemOrder(BaseModel):
    direction: OrderDirection
    field: ProjectV2ItemOrderField


class ProjectV2Order(BaseModel):
    direction: OrderDirection
    field: ProjectV2OrderField


class ProjectV2SingleSelectFieldOptionInput(BaseModel):
    color: ProjectV2SingleSelectFieldOptionColor
    description: str
    name: str


class ProjectV2ViewOrder(BaseModel):
    direction: OrderDirection
    field: ProjectV2ViewOrderField


class ProjectV2WorkflowOrder(BaseModel):
    direction: OrderDirection
    field: ProjectV2WorkflowsOrderField


class PublishSponsorsTierInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    tier_id: str = Field(alias="tierId")


class PullRequestOrder(BaseModel):
    direction: OrderDirection
    field: PullRequestOrderField


class PullRequestParametersInput(BaseModel):
    dismiss_stale_reviews_on_push: bool = Field(alias="dismissStaleReviewsOnPush")
    require_code_owner_review: bool = Field(alias="requireCodeOwnerReview")
    require_last_push_approval: bool = Field(alias="requireLastPushApproval")
    required_approving_review_count: int = Field(alias="requiredApprovingReviewCount")
    required_review_thread_resolution: bool = Field(alias="requiredReviewThreadResolution")


class ReactionOrder(BaseModel):
    direction: OrderDirection
    field: ReactionOrderField


class RefNameConditionTargetInput(BaseModel):
    exclude: List[str]
    include: List[str]


class RefOrder(BaseModel):
    direction: OrderDirection
    field: RefOrderField


class RefUpdate(BaseModel):
    after_oid: Any = Field(alias="afterOid")
    before_oid: Optional[Any] = Field(alias="beforeOid", default=None)
    force: Optional[bool] = False
    name: Any


class RegenerateEnterpriseIdentityProviderRecoveryCodesInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    enterprise_id: str = Field(alias="enterpriseId")


class RegenerateVerifiableDomainTokenInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    id: str


class RejectDeploymentsInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    comment: Optional[str] = ""
    environment_ids: List[str] = Field(alias="environmentIds")
    workflow_run_id: str = Field(alias="workflowRunId")


class ReleaseOrder(BaseModel):
    direction: OrderDirection
    field: ReleaseOrderField


class RemoveAssigneesFromAssignableInput(BaseModel):
    assignable_id: str = Field(alias="assignableId")
    assignee_ids: List[str] = Field(alias="assigneeIds")
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)


class RemoveEnterpriseAdminInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    enterprise_id: str = Field(alias="enterpriseId")
    login: str


class RemoveEnterpriseIdentityProviderInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    enterprise_id: str = Field(alias="enterpriseId")


class RemoveEnterpriseMemberInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    enterprise_id: str = Field(alias="enterpriseId")
    user_id: str = Field(alias="userId")


class RemoveEnterpriseOrganizationInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    enterprise_id: str = Field(alias="enterpriseId")
    organization_id: str = Field(alias="organizationId")


class RemoveEnterpriseSupportEntitlementInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    enterprise_id: str = Field(alias="enterpriseId")
    login: str


class RemoveLabelsFromLabelableInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    label_ids: List[str] = Field(alias="labelIds")
    labelable_id: str = Field(alias="labelableId")


class RemoveOutsideCollaboratorInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    organization_id: str = Field(alias="organizationId")
    user_id: str = Field(alias="userId")


class RemoveReactionInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    content: ReactionContent
    subject_id: str = Field(alias="subjectId")


class RemoveStarInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    starrable_id: str = Field(alias="starrableId")


class RemoveUpvoteInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    subject_id: str = Field(alias="subjectId")


class ReopenDiscussionInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    discussion_id: str = Field(alias="discussionId")


class ReopenIssueInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    issue_id: str = Field(alias="issueId")


class ReopenPullRequestInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    pull_request_id: str = Field(alias="pullRequestId")


class RepositoryIdConditionTargetInput(BaseModel):
    repository_ids: List[str] = Field(alias="repositoryIds")


class RepositoryInvitationOrder(BaseModel):
    direction: OrderDirection
    field: RepositoryInvitationOrderField


class RepositoryMigrationOrder(BaseModel):
    direction: RepositoryMigrationOrderDirection
    field: RepositoryMigrationOrderField


class RepositoryNameConditionTargetInput(BaseModel):
    exclude: List[str]
    include: List[str]
    protected: Optional[bool] = None


class RepositoryOrder(BaseModel):
    direction: OrderDirection
    field: RepositoryOrderField


class RepositoryRuleConditionsInput(BaseModel):
    ref_name: Optional["RefNameConditionTargetInput"] = Field(alias="refName", default=None)
    repository_id: Optional["RepositoryIdConditionTargetInput"] = Field(alias="repositoryId", default=None)
    repository_name: Optional["RepositoryNameConditionTargetInput"] = Field(alias="repositoryName", default=None)


class RepositoryRuleInput(BaseModel):
    id: Optional[str] = None
    parameters: Optional["RuleParametersInput"] = None
    type: RepositoryRuleType


class RepositoryRulesetBypassActorInput(BaseModel):
    actor_id: Optional[str] = Field(alias="actorId", default=None)
    bypass_mode: RepositoryRulesetBypassActorBypassMode = Field(alias="bypassMode")
    organization_admin: Optional[bool] = Field(alias="organizationAdmin", default=None)
    repository_role_database_id: Optional[int] = Field(alias="repositoryRoleDatabaseId", default=None)


class RequestReviewsInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    pull_request_id: str = Field(alias="pullRequestId")
    team_ids: Optional[List[str]] = Field(alias="teamIds", default=None)
    union: Optional[bool] = False
    user_ids: Optional[List[str]] = Field(alias="userIds", default=None)


class RequiredDeploymentsParametersInput(BaseModel):
    required_deployment_environments: List[str] = Field(alias="requiredDeploymentEnvironments")


class RequiredStatusCheckInput(BaseModel):
    app_id: Optional[str] = Field(alias="appId", default=None)
    context: str


class RequiredStatusChecksParametersInput(BaseModel):
    required_status_checks: List["StatusCheckConfigurationInput"] = Field(alias="requiredStatusChecks")
    strict_required_status_checks_policy: bool = Field(alias="strictRequiredStatusChecksPolicy")


class RerequestCheckSuiteInput(BaseModel):
    check_suite_id: str = Field(alias="checkSuiteId")
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    repository_id: str = Field(alias="repositoryId")


class ResolveReviewThreadInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    thread_id: str = Field(alias="threadId")


class RetireSponsorsTierInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    tier_id: str = Field(alias="tierId")


class RevertPullRequestInput(BaseModel):
    body: Optional[str] = None
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    draft: Optional[bool] = False
    pull_request_id: str = Field(alias="pullRequestId")
    title: Optional[str] = None


class RevokeEnterpriseOrganizationsMigratorRoleInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    enterprise_id: str = Field(alias="enterpriseId")
    login: str


class RevokeMigratorRoleInput(BaseModel):
    actor: str
    actor_type: ActorType = Field(alias="actorType")
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    organization_id: str = Field(alias="organizationId")


class RuleParametersInput(BaseModel):
    branch_name_pattern: Optional["BranchNamePatternParametersInput"] = Field(alias="branchNamePattern", default=None)
    commit_author_email_pattern: Optional["CommitAuthorEmailPatternParametersInput"] = Field(
        alias="commitAuthorEmailPattern", default=None
    )
    commit_message_pattern: Optional["CommitMessagePatternParametersInput"] = Field(
        alias="commitMessagePattern", default=None
    )
    committer_email_pattern: Optional["CommitterEmailPatternParametersInput"] = Field(
        alias="committerEmailPattern", default=None
    )
    pull_request: Optional["PullRequestParametersInput"] = Field(alias="pullRequest", default=None)
    required_deployments: Optional["RequiredDeploymentsParametersInput"] = Field(
        alias="requiredDeployments", default=None
    )
    required_status_checks: Optional["RequiredStatusChecksParametersInput"] = Field(
        alias="requiredStatusChecks", default=None
    )
    tag_name_pattern: Optional["TagNamePatternParametersInput"] = Field(alias="tagNamePattern", default=None)
    update: Optional["UpdateParametersInput"] = None


class SavedReplyOrder(BaseModel):
    direction: OrderDirection
    field: SavedReplyOrderField


class SecurityAdvisoryIdentifierFilter(BaseModel):
    type: SecurityAdvisoryIdentifierType
    value: str


class SecurityAdvisoryOrder(BaseModel):
    direction: OrderDirection
    field: SecurityAdvisoryOrderField


class SecurityVulnerabilityOrder(BaseModel):
    direction: OrderDirection
    field: SecurityVulnerabilityOrderField


class SetEnterpriseIdentityProviderInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    digest_method: SamlDigestAlgorithm = Field(alias="digestMethod")
    enterprise_id: str = Field(alias="enterpriseId")
    idp_certificate: str = Field(alias="idpCertificate")
    issuer: Optional[str] = None
    signature_method: SamlSignatureAlgorithm = Field(alias="signatureMethod")
    sso_url: Any = Field(alias="ssoUrl")


class SetOrganizationInteractionLimitInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    expiry: Optional[RepositoryInteractionLimitExpiry] = None
    limit: RepositoryInteractionLimit
    organization_id: str = Field(alias="organizationId")


class SetRepositoryInteractionLimitInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    expiry: Optional[RepositoryInteractionLimitExpiry] = None
    limit: RepositoryInteractionLimit
    repository_id: str = Field(alias="repositoryId")


class SetUserInteractionLimitInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    expiry: Optional[RepositoryInteractionLimitExpiry] = None
    limit: RepositoryInteractionLimit
    user_id: str = Field(alias="userId")


class SponsorOrder(BaseModel):
    direction: OrderDirection
    field: SponsorOrderField


class SponsorableOrder(BaseModel):
    direction: OrderDirection
    field: SponsorableOrderField


class SponsorsActivityOrder(BaseModel):
    direction: OrderDirection
    field: SponsorsActivityOrderField


class SponsorsTierOrder(BaseModel):
    direction: OrderDirection
    field: SponsorsTierOrderField


class SponsorshipNewsletterOrder(BaseModel):
    direction: OrderDirection
    field: SponsorshipNewsletterOrderField


class SponsorshipOrder(BaseModel):
    direction: OrderDirection
    field: SponsorshipOrderField


class StarOrder(BaseModel):
    direction: OrderDirection
    field: StarOrderField


class StartOrganizationMigrationInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    source_access_token: str = Field(alias="sourceAccessToken")
    source_org_url: Any = Field(alias="sourceOrgUrl")
    target_enterprise_id: str = Field(alias="targetEnterpriseId")
    target_org_name: str = Field(alias="targetOrgName")


class StartRepositoryMigrationInput(BaseModel):
    access_token: Optional[str] = Field(alias="accessToken", default=None)
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    continue_on_error: Optional[bool] = Field(alias="continueOnError", default=None)
    git_archive_url: Optional[str] = Field(alias="gitArchiveUrl", default=None)
    github_pat: Optional[str] = Field(alias="githubPat", default=None)
    lock_source: Optional[bool] = Field(alias="lockSource", default=None)
    metadata_archive_url: Optional[str] = Field(alias="metadataArchiveUrl", default=None)
    owner_id: str = Field(alias="ownerId")
    repository_name: str = Field(alias="repositoryName")
    skip_releases: Optional[bool] = Field(alias="skipReleases", default=None)
    source_id: str = Field(alias="sourceId")
    source_repository_url: Optional[Any] = Field(alias="sourceRepositoryUrl", default=None)
    target_repo_visibility: Optional[str] = Field(alias="targetRepoVisibility", default=None)


class StatusCheckConfigurationInput(BaseModel):
    context: str
    integration_id: Optional[int] = Field(alias="integrationId", default=None)


class SubmitPullRequestReviewInput(BaseModel):
    body: Optional[str] = None
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    event: PullRequestReviewEvent
    pull_request_id: Optional[str] = Field(alias="pullRequestId", default=None)
    pull_request_review_id: Optional[str] = Field(alias="pullRequestReviewId", default=None)


class TagNamePatternParametersInput(BaseModel):
    name: Optional[str] = None
    negate: Optional[bool] = None
    operator: str
    pattern: str


class TeamDiscussionCommentOrder(BaseModel):
    direction: OrderDirection
    field: TeamDiscussionCommentOrderField


class TeamDiscussionOrder(BaseModel):
    direction: OrderDirection
    field: TeamDiscussionOrderField


class TeamMemberOrder(BaseModel):
    direction: OrderDirection
    field: TeamMemberOrderField


class TeamOrder(BaseModel):
    direction: OrderDirection
    field: TeamOrderField


class TeamRepositoryOrder(BaseModel):
    direction: OrderDirection
    field: TeamRepositoryOrderField


class TransferEnterpriseOrganizationInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    destination_enterprise_id: str = Field(alias="destinationEnterpriseId")
    organization_id: str = Field(alias="organizationId")


class TransferIssueInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    create_labels_if_missing: Optional[bool] = Field(alias="createLabelsIfMissing", default=False)
    issue_id: str = Field(alias="issueId")
    repository_id: str = Field(alias="repositoryId")


class UnarchiveProjectV2ItemInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    item_id: str = Field(alias="itemId")
    project_id: str = Field(alias="projectId")


class UnarchiveRepositoryInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    repository_id: str = Field(alias="repositoryId")


class UnfollowOrganizationInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    organization_id: str = Field(alias="organizationId")


class UnfollowUserInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    user_id: str = Field(alias="userId")


class UnlinkProjectV2FromRepositoryInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    project_id: str = Field(alias="projectId")
    repository_id: str = Field(alias="repositoryId")


class UnlinkProjectV2FromTeamInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    project_id: str = Field(alias="projectId")
    team_id: str = Field(alias="teamId")


class UnlinkRepositoryFromProjectInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    project_id: str = Field(alias="projectId")
    repository_id: str = Field(alias="repositoryId")


class UnlockLockableInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    lockable_id: str = Field(alias="lockableId")


class UnmarkDiscussionCommentAsAnswerInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    id: str


class UnmarkFileAsViewedInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    path: str
    pull_request_id: str = Field(alias="pullRequestId")


class UnmarkIssueAsDuplicateInput(BaseModel):
    canonical_id: str = Field(alias="canonicalId")
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    duplicate_id: str = Field(alias="duplicateId")


class UnmarkProjectV2AsTemplateInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    project_id: str = Field(alias="projectId")


class UnminimizeCommentInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    subject_id: str = Field(alias="subjectId")


class UnpinIssueInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    issue_id: str = Field(alias="issueId")


class UnresolveReviewThreadInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    thread_id: str = Field(alias="threadId")


class UpdateBranchProtectionRuleInput(BaseModel):
    allows_deletions: Optional[bool] = Field(alias="allowsDeletions", default=None)
    allows_force_pushes: Optional[bool] = Field(alias="allowsForcePushes", default=None)
    blocks_creations: Optional[bool] = Field(alias="blocksCreations", default=None)
    branch_protection_rule_id: str = Field(alias="branchProtectionRuleId")
    bypass_force_push_actor_ids: Optional[List[str]] = Field(alias="bypassForcePushActorIds", default=None)
    bypass_pull_request_actor_ids: Optional[List[str]] = Field(alias="bypassPullRequestActorIds", default=None)
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    dismisses_stale_reviews: Optional[bool] = Field(alias="dismissesStaleReviews", default=None)
    is_admin_enforced: Optional[bool] = Field(alias="isAdminEnforced", default=None)
    lock_allows_fetch_and_merge: Optional[bool] = Field(alias="lockAllowsFetchAndMerge", default=None)
    lock_branch: Optional[bool] = Field(alias="lockBranch", default=None)
    pattern: Optional[str] = None
    push_actor_ids: Optional[List[str]] = Field(alias="pushActorIds", default=None)
    require_last_push_approval: Optional[bool] = Field(alias="requireLastPushApproval", default=None)
    required_approving_review_count: Optional[int] = Field(alias="requiredApprovingReviewCount", default=None)
    required_deployment_environments: Optional[List[str]] = Field(alias="requiredDeploymentEnvironments", default=None)
    required_status_check_contexts: Optional[List[str]] = Field(alias="requiredStatusCheckContexts", default=None)
    required_status_checks: Optional[List["RequiredStatusCheckInput"]] = Field(
        alias="requiredStatusChecks", default=None
    )
    requires_approving_reviews: Optional[bool] = Field(alias="requiresApprovingReviews", default=None)
    requires_code_owner_reviews: Optional[bool] = Field(alias="requiresCodeOwnerReviews", default=None)
    requires_commit_signatures: Optional[bool] = Field(alias="requiresCommitSignatures", default=None)
    requires_conversation_resolution: Optional[bool] = Field(alias="requiresConversationResolution", default=None)
    requires_deployments: Optional[bool] = Field(alias="requiresDeployments", default=None)
    requires_linear_history: Optional[bool] = Field(alias="requiresLinearHistory", default=None)
    requires_status_checks: Optional[bool] = Field(alias="requiresStatusChecks", default=None)
    requires_strict_status_checks: Optional[bool] = Field(alias="requiresStrictStatusChecks", default=None)
    restricts_pushes: Optional[bool] = Field(alias="restrictsPushes", default=None)
    restricts_review_dismissals: Optional[bool] = Field(alias="restrictsReviewDismissals", default=None)
    review_dismissal_actor_ids: Optional[List[str]] = Field(alias="reviewDismissalActorIds", default=None)


class UpdateCheckRunInput(BaseModel):
    actions: Optional[List["CheckRunAction"]] = None
    check_run_id: str = Field(alias="checkRunId")
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    completed_at: Optional[Any] = Field(alias="completedAt", default=None)
    conclusion: Optional[CheckConclusionState] = None
    details_url: Optional[Any] = Field(alias="detailsUrl", default=None)
    external_id: Optional[str] = Field(alias="externalId", default=None)
    name: Optional[str] = None
    output: Optional["CheckRunOutput"] = None
    repository_id: str = Field(alias="repositoryId")
    started_at: Optional[Any] = Field(alias="startedAt", default=None)
    status: Optional[RequestableCheckStatusState] = None


class UpdateCheckSuitePreferencesInput(BaseModel):
    auto_trigger_preferences: List["CheckSuiteAutoTriggerPreference"] = Field(alias="autoTriggerPreferences")
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    repository_id: str = Field(alias="repositoryId")


class UpdateDiscussionCommentInput(BaseModel):
    body: str
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    comment_id: str = Field(alias="commentId")


class UpdateDiscussionInput(BaseModel):
    body: Optional[str] = None
    category_id: Optional[str] = Field(alias="categoryId", default=None)
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    discussion_id: str = Field(alias="discussionId")
    title: Optional[str] = None


class UpdateEnterpriseAdministratorRoleInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    enterprise_id: str = Field(alias="enterpriseId")
    login: str
    role: EnterpriseAdministratorRole


class UpdateEnterpriseAllowPrivateRepositoryForkingSettingInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    enterprise_id: str = Field(alias="enterpriseId")
    policy_value: Optional[EnterpriseAllowPrivateRepositoryForkingPolicyValue] = Field(
        alias="policyValue", default=None
    )
    setting_value: EnterpriseEnabledDisabledSettingValue = Field(alias="settingValue")


class UpdateEnterpriseDefaultRepositoryPermissionSettingInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    enterprise_id: str = Field(alias="enterpriseId")
    setting_value: EnterpriseDefaultRepositoryPermissionSettingValue = Field(alias="settingValue")


class UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    enterprise_id: str = Field(alias="enterpriseId")
    setting_value: EnterpriseEnabledDisabledSettingValue = Field(alias="settingValue")


class UpdateEnterpriseMembersCanCreateRepositoriesSettingInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    enterprise_id: str = Field(alias="enterpriseId")
    members_can_create_internal_repositories: Optional[bool] = Field(
        alias="membersCanCreateInternalRepositories", default=None
    )
    members_can_create_private_repositories: Optional[bool] = Field(
        alias="membersCanCreatePrivateRepositories", default=None
    )
    members_can_create_public_repositories: Optional[bool] = Field(
        alias="membersCanCreatePublicRepositories", default=None
    )
    members_can_create_repositories_policy_enabled: Optional[bool] = Field(
        alias="membersCanCreateRepositoriesPolicyEnabled", default=None
    )
    setting_value: Optional[EnterpriseMembersCanCreateRepositoriesSettingValue] = Field(
        alias="settingValue", default=None
    )


class UpdateEnterpriseMembersCanDeleteIssuesSettingInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    enterprise_id: str = Field(alias="enterpriseId")
    setting_value: EnterpriseEnabledDisabledSettingValue = Field(alias="settingValue")


class UpdateEnterpriseMembersCanDeleteRepositoriesSettingInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    enterprise_id: str = Field(alias="enterpriseId")
    setting_value: EnterpriseEnabledDisabledSettingValue = Field(alias="settingValue")


class UpdateEnterpriseMembersCanInviteCollaboratorsSettingInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    enterprise_id: str = Field(alias="enterpriseId")
    setting_value: EnterpriseEnabledDisabledSettingValue = Field(alias="settingValue")


class UpdateEnterpriseMembersCanMakePurchasesSettingInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    enterprise_id: str = Field(alias="enterpriseId")
    setting_value: EnterpriseMembersCanMakePurchasesSettingValue = Field(alias="settingValue")


class UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    enterprise_id: str = Field(alias="enterpriseId")
    setting_value: EnterpriseEnabledDisabledSettingValue = Field(alias="settingValue")


class UpdateEnterpriseMembersCanViewDependencyInsightsSettingInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    enterprise_id: str = Field(alias="enterpriseId")
    setting_value: EnterpriseEnabledDisabledSettingValue = Field(alias="settingValue")


class UpdateEnterpriseOrganizationProjectsSettingInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    enterprise_id: str = Field(alias="enterpriseId")
    setting_value: EnterpriseEnabledDisabledSettingValue = Field(alias="settingValue")


class UpdateEnterpriseOwnerOrganizationRoleInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    enterprise_id: str = Field(alias="enterpriseId")
    organization_id: str = Field(alias="organizationId")
    organization_role: RoleInOrganization = Field(alias="organizationRole")


class UpdateEnterpriseProfileInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    description: Optional[str] = None
    enterprise_id: str = Field(alias="enterpriseId")
    location: Optional[str] = None
    name: Optional[str] = None
    website_url: Optional[str] = Field(alias="websiteUrl", default=None)


class UpdateEnterpriseRepositoryProjectsSettingInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    enterprise_id: str = Field(alias="enterpriseId")
    setting_value: EnterpriseEnabledDisabledSettingValue = Field(alias="settingValue")


class UpdateEnterpriseTeamDiscussionsSettingInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    enterprise_id: str = Field(alias="enterpriseId")
    setting_value: EnterpriseEnabledDisabledSettingValue = Field(alias="settingValue")


class UpdateEnterpriseTwoFactorAuthenticationRequiredSettingInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    enterprise_id: str = Field(alias="enterpriseId")
    setting_value: EnterpriseEnabledSettingValue = Field(alias="settingValue")


class UpdateEnvironmentInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    environment_id: str = Field(alias="environmentId")
    reviewers: Optional[List[str]] = None
    wait_timer: Optional[int] = Field(alias="waitTimer", default=None)


class UpdateIpAllowListEnabledSettingInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    owner_id: str = Field(alias="ownerId")
    setting_value: IpAllowListEnabledSettingValue = Field(alias="settingValue")


class UpdateIpAllowListEntryInput(BaseModel):
    allow_list_value: str = Field(alias="allowListValue")
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    ip_allow_list_entry_id: str = Field(alias="ipAllowListEntryId")
    is_active: bool = Field(alias="isActive")
    name: Optional[str] = None


class UpdateIpAllowListForInstalledAppsEnabledSettingInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    owner_id: str = Field(alias="ownerId")
    setting_value: IpAllowListForInstalledAppsEnabledSettingValue = Field(alias="settingValue")


class UpdateIssueCommentInput(BaseModel):
    body: str
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    id: str


class UpdateIssueInput(BaseModel):
    assignee_ids: Optional[List[str]] = Field(alias="assigneeIds", default=None)
    body: Optional[str] = None
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    id: str
    label_ids: Optional[List[str]] = Field(alias="labelIds", default=None)
    milestone_id: Optional[str] = Field(alias="milestoneId", default=None)
    project_ids: Optional[List[str]] = Field(alias="projectIds", default=None)
    state: Optional[IssueState] = None
    title: Optional[str] = None


class UpdateLabelInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    color: Optional[str] = None
    description: Optional[str] = None
    id: str
    name: Optional[str] = None


class UpdateNotificationRestrictionSettingInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    owner_id: str = Field(alias="ownerId")
    setting_value: NotificationRestrictionSettingValue = Field(alias="settingValue")


class UpdateOrganizationAllowPrivateRepositoryForkingSettingInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    forking_enabled: bool = Field(alias="forkingEnabled")
    organization_id: str = Field(alias="organizationId")


class UpdateOrganizationWebCommitSignoffSettingInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    organization_id: str = Field(alias="organizationId")
    web_commit_signoff_required: bool = Field(alias="webCommitSignoffRequired")


class UpdateParametersInput(BaseModel):
    update_allows_fetch_and_merge: bool = Field(alias="updateAllowsFetchAndMerge")


class UpdateProjectCardInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    is_archived: Optional[bool] = Field(alias="isArchived", default=None)
    note: Optional[str] = None
    project_card_id: str = Field(alias="projectCardId")


class UpdateProjectColumnInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    name: str
    project_column_id: str = Field(alias="projectColumnId")


class UpdateProjectInput(BaseModel):
    body: Optional[str] = None
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    name: Optional[str] = None
    project_id: str = Field(alias="projectId")
    public: Optional[bool] = None
    state: Optional[ProjectState] = None


class UpdateProjectV2CollaboratorsInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    collaborators: List["ProjectV2Collaborator"]
    project_id: str = Field(alias="projectId")


class UpdateProjectV2DraftIssueInput(BaseModel):
    assignee_ids: Optional[List[str]] = Field(alias="assigneeIds", default=None)
    body: Optional[str] = None
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    draft_issue_id: str = Field(alias="draftIssueId")
    title: Optional[str] = None


class UpdateProjectV2Input(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    closed: Optional[bool] = None
    project_id: str = Field(alias="projectId")
    public: Optional[bool] = None
    readme: Optional[str] = None
    short_description: Optional[str] = Field(alias="shortDescription", default=None)
    title: Optional[str] = None


class UpdateProjectV2ItemFieldValueInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    field_id: str = Field(alias="fieldId")
    item_id: str = Field(alias="itemId")
    project_id: str = Field(alias="projectId")
    value: "ProjectV2FieldValue"


class UpdateProjectV2ItemPositionInput(BaseModel):
    after_id: Optional[str] = Field(alias="afterId", default=None)
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    item_id: str = Field(alias="itemId")
    project_id: str = Field(alias="projectId")


class UpdatePullRequestBranchInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    expected_head_oid: Optional[Any] = Field(alias="expectedHeadOid", default=None)
    pull_request_id: str = Field(alias="pullRequestId")
    update_method: Optional[PullRequestBranchUpdateMethod] = Field(alias="updateMethod", default=None)


class UpdatePullRequestInput(BaseModel):
    assignee_ids: Optional[List[str]] = Field(alias="assigneeIds", default=None)
    base_ref_name: Optional[str] = Field(alias="baseRefName", default=None)
    body: Optional[str] = None
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    label_ids: Optional[List[str]] = Field(alias="labelIds", default=None)
    maintainer_can_modify: Optional[bool] = Field(alias="maintainerCanModify", default=None)
    milestone_id: Optional[str] = Field(alias="milestoneId", default=None)
    project_ids: Optional[List[str]] = Field(alias="projectIds", default=None)
    pull_request_id: str = Field(alias="pullRequestId")
    state: Optional[PullRequestUpdateState] = None
    title: Optional[str] = None


class UpdatePullRequestReviewCommentInput(BaseModel):
    body: str
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    pull_request_review_comment_id: str = Field(alias="pullRequestReviewCommentId")


class UpdatePullRequestReviewInput(BaseModel):
    body: str
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    pull_request_review_id: str = Field(alias="pullRequestReviewId")


class UpdateRefInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    force: Optional[bool] = False
    oid: Any
    ref_id: str = Field(alias="refId")


class UpdateRefsInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    ref_updates: List["RefUpdate"] = Field(alias="refUpdates")
    repository_id: str = Field(alias="repositoryId")


class UpdateRepositoryInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    description: Optional[str] = None
    has_discussions_enabled: Optional[bool] = Field(alias="hasDiscussionsEnabled", default=None)
    has_issues_enabled: Optional[bool] = Field(alias="hasIssuesEnabled", default=None)
    has_projects_enabled: Optional[bool] = Field(alias="hasProjectsEnabled", default=None)
    has_wiki_enabled: Optional[bool] = Field(alias="hasWikiEnabled", default=None)
    homepage_url: Optional[Any] = Field(alias="homepageUrl", default=None)
    name: Optional[str] = None
    repository_id: str = Field(alias="repositoryId")
    template: Optional[bool] = None


class UpdateRepositoryRulesetInput(BaseModel):
    bypass_actors: Optional[List["RepositoryRulesetBypassActorInput"]] = Field(alias="bypassActors", default=None)
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    conditions: Optional["RepositoryRuleConditionsInput"] = None
    enforcement: Optional[RuleEnforcement] = None
    name: Optional[str] = None
    repository_ruleset_id: str = Field(alias="repositoryRulesetId")
    rules: Optional[List["RepositoryRuleInput"]] = None
    target: Optional[RepositoryRulesetTarget] = None


class UpdateRepositoryWebCommitSignoffSettingInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    repository_id: str = Field(alias="repositoryId")
    web_commit_signoff_required: bool = Field(alias="webCommitSignoffRequired")


class UpdateSponsorshipPreferencesInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    privacy_level: Optional[SponsorshipPrivacy] = Field(alias="privacyLevel", default=SponsorshipPrivacy.PUBLIC)
    receive_emails: Optional[bool] = Field(alias="receiveEmails", default=True)
    sponsor_id: Optional[str] = Field(alias="sponsorId", default=None)
    sponsor_login: Optional[str] = Field(alias="sponsorLogin", default=None)
    sponsorable_id: Optional[str] = Field(alias="sponsorableId", default=None)
    sponsorable_login: Optional[str] = Field(alias="sponsorableLogin", default=None)


class UpdateSubscriptionInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    state: SubscriptionState
    subscribable_id: str = Field(alias="subscribableId")


class UpdateTeamDiscussionCommentInput(BaseModel):
    body: str
    body_version: Optional[str] = Field(alias="bodyVersion", default=None)
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    id: str


class UpdateTeamDiscussionInput(BaseModel):
    body: Optional[str] = None
    body_version: Optional[str] = Field(alias="bodyVersion", default=None)
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    id: str
    pinned: Optional[bool] = None
    title: Optional[str] = None


class UpdateTeamReviewAssignmentInput(BaseModel):
    algorithm: Optional[TeamReviewAssignmentAlgorithm] = TeamReviewAssignmentAlgorithm.ROUND_ROBIN
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    enabled: bool
    excluded_team_member_ids: Optional[List[str]] = Field(alias="excludedTeamMemberIds", default=None)
    id: str
    notify_team: Optional[bool] = Field(alias="notifyTeam", default=True)
    team_member_count: Optional[int] = Field(alias="teamMemberCount", default=1)


class UpdateTeamsRepositoryInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    permission: RepositoryPermission
    repository_id: str = Field(alias="repositoryId")
    team_ids: List[str] = Field(alias="teamIds")


class UpdateTopicsInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    repository_id: str = Field(alias="repositoryId")
    topic_names: List[str] = Field(alias="topicNames")


class UserStatusOrder(BaseModel):
    direction: OrderDirection
    field: UserStatusOrderField


class VerifiableDomainOrder(BaseModel):
    direction: OrderDirection
    field: VerifiableDomainOrderField


class VerifyVerifiableDomainInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    id: str


class WorkflowRunOrder(BaseModel):
    direction: OrderDirection
    field: WorkflowRunOrderField


AbortQueuedMigrationsInput.model_rebuild()
AcceptEnterpriseAdministratorInvitationInput.model_rebuild()
AcceptTopicSuggestionInput.model_rebuild()
AddAssigneesToAssignableInput.model_rebuild()
AddCommentInput.model_rebuild()
AddDiscussionCommentInput.model_rebuild()
AddDiscussionPollVoteInput.model_rebuild()
AddEnterpriseOrganizationMemberInput.model_rebuild()
AddEnterpriseSupportEntitlementInput.model_rebuild()
AddLabelsToLabelableInput.model_rebuild()
AddProjectCardInput.model_rebuild()
AddProjectColumnInput.model_rebuild()
AddProjectV2DraftIssueInput.model_rebuild()
AddProjectV2ItemByIdInput.model_rebuild()
AddPullRequestReviewCommentInput.model_rebuild()
AddPullRequestReviewInput.model_rebuild()
AddPullRequestReviewThreadInput.model_rebuild()
AddPullRequestReviewThreadReplyInput.model_rebuild()
AddReactionInput.model_rebuild()
AddStarInput.model_rebuild()
AddUpvoteInput.model_rebuild()
AddVerifiableDomainInput.model_rebuild()
ApproveDeploymentsInput.model_rebuild()
ApproveVerifiableDomainInput.model_rebuild()
ArchiveProjectV2ItemInput.model_rebuild()
ArchiveRepositoryInput.model_rebuild()
AuditLogOrder.model_rebuild()
BranchNamePatternParametersInput.model_rebuild()
BulkSponsorship.model_rebuild()
CancelEnterpriseAdminInvitationInput.model_rebuild()
CancelSponsorshipInput.model_rebuild()
ChangeUserStatusInput.model_rebuild()
CheckAnnotationData.model_rebuild()
CheckAnnotationRange.model_rebuild()
CheckRunAction.model_rebuild()
CheckRunFilter.model_rebuild()
CheckRunOutput.model_rebuild()
CheckRunOutputImage.model_rebuild()
CheckSuiteAutoTriggerPreference.model_rebuild()
CheckSuiteFilter.model_rebuild()
ClearLabelsFromLabelableInput.model_rebuild()
ClearProjectV2ItemFieldValueInput.model_rebuild()
CloneProjectInput.model_rebuild()
CloneTemplateRepositoryInput.model_rebuild()
CloseDiscussionInput.model_rebuild()
CloseIssueInput.model_rebuild()
ClosePullRequestInput.model_rebuild()
CommitAuthor.model_rebuild()
CommitAuthorEmailPatternParametersInput.model_rebuild()
CommitContributionOrder.model_rebuild()
CommitMessage.model_rebuild()
CommitMessagePatternParametersInput.model_rebuild()
CommittableBranch.model_rebuild()
CommitterEmailPatternParametersInput.model_rebuild()
ContributionOrder.model_rebuild()
ConvertProjectCardNoteToIssueInput.model_rebuild()
ConvertPullRequestToDraftInput.model_rebuild()
CopyProjectV2Input.model_rebuild()
CreateAttributionInvitationInput.model_rebuild()
CreateBranchProtectionRuleInput.model_rebuild()
CreateCheckRunInput.model_rebuild()
CreateCheckSuiteInput.model_rebuild()
CreateCommitOnBranchInput.model_rebuild()
CreateDeploymentInput.model_rebuild()
CreateDeploymentStatusInput.model_rebuild()
CreateDiscussionInput.model_rebuild()
CreateEnterpriseOrganizationInput.model_rebuild()
CreateEnvironmentInput.model_rebuild()
CreateIpAllowListEntryInput.model_rebuild()
CreateIssueInput.model_rebuild()
CreateLabelInput.model_rebuild()
CreateLinkedBranchInput.model_rebuild()
CreateMigrationSourceInput.model_rebuild()
CreateProjectInput.model_rebuild()
CreateProjectV2FieldInput.model_rebuild()
CreateProjectV2Input.model_rebuild()
CreatePullRequestInput.model_rebuild()
CreateRefInput.model_rebuild()
CreateRepositoryInput.model_rebuild()
CreateRepositoryRulesetInput.model_rebuild()
CreateSponsorsListingInput.model_rebuild()
CreateSponsorsTierInput.model_rebuild()
CreateSponsorshipInput.model_rebuild()
CreateSponsorshipsInput.model_rebuild()
CreateTeamDiscussionCommentInput.model_rebuild()
CreateTeamDiscussionInput.model_rebuild()
DeclineTopicSuggestionInput.model_rebuild()
DeleteBranchProtectionRuleInput.model_rebuild()
DeleteDeploymentInput.model_rebuild()
DeleteDiscussionCommentInput.model_rebuild()
DeleteDiscussionInput.model_rebuild()
DeleteEnvironmentInput.model_rebuild()
DeleteIpAllowListEntryInput.model_rebuild()
DeleteIssueCommentInput.model_rebuild()
DeleteIssueInput.model_rebuild()
DeleteLabelInput.model_rebuild()
DeleteLinkedBranchInput.model_rebuild()
DeletePackageVersionInput.model_rebuild()
DeleteProjectCardInput.model_rebuild()
DeleteProjectColumnInput.model_rebuild()
DeleteProjectInput.model_rebuild()
DeleteProjectV2FieldInput.model_rebuild()
DeleteProjectV2Input.model_rebuild()
DeleteProjectV2ItemInput.model_rebuild()
DeleteProjectV2WorkflowInput.model_rebuild()
DeletePullRequestReviewCommentInput.model_rebuild()
DeletePullRequestReviewInput.model_rebuild()
DeleteRefInput.model_rebuild()
DeleteRepositoryRulesetInput.model_rebuild()
DeleteTeamDiscussionCommentInput.model_rebuild()
DeleteTeamDiscussionInput.model_rebuild()
DeleteVerifiableDomainInput.model_rebuild()
DeploymentOrder.model_rebuild()
DequeuePullRequestInput.model_rebuild()
DisablePullRequestAutoMergeInput.model_rebuild()
DiscussionOrder.model_rebuild()
DiscussionPollOptionOrder.model_rebuild()
DismissPullRequestReviewInput.model_rebuild()
DismissRepositoryVulnerabilityAlertInput.model_rebuild()
DraftPullRequestReviewComment.model_rebuild()
DraftPullRequestReviewThread.model_rebuild()
EnablePullRequestAutoMergeInput.model_rebuild()
EnqueuePullRequestInput.model_rebuild()
EnterpriseAdministratorInvitationOrder.model_rebuild()
EnterpriseMemberOrder.model_rebuild()
EnterpriseServerInstallationOrder.model_rebuild()
EnterpriseServerUserAccountEmailOrder.model_rebuild()
EnterpriseServerUserAccountOrder.model_rebuild()
EnterpriseServerUserAccountsUploadOrder.model_rebuild()
Environments.model_rebuild()
FileAddition.model_rebuild()
FileChanges.model_rebuild()
FileDeletion.model_rebuild()
FollowOrganizationInput.model_rebuild()
FollowUserInput.model_rebuild()
GistOrder.model_rebuild()
GrantEnterpriseOrganizationsMigratorRoleInput.model_rebuild()
GrantMigratorRoleInput.model_rebuild()
ImportProjectInput.model_rebuild()
InviteEnterpriseAdminInput.model_rebuild()
IpAllowListEntryOrder.model_rebuild()
IssueCommentOrder.model_rebuild()
IssueFilters.model_rebuild()
IssueOrder.model_rebuild()
LabelOrder.model_rebuild()
LanguageOrder.model_rebuild()
LinkProjectV2ToRepositoryInput.model_rebuild()
LinkProjectV2ToTeamInput.model_rebuild()
LinkRepositoryToProjectInput.model_rebuild()
LockLockableInput.model_rebuild()
MannequinOrder.model_rebuild()
MarkDiscussionCommentAsAnswerInput.model_rebuild()
MarkFileAsViewedInput.model_rebuild()
MarkProjectV2AsTemplateInput.model_rebuild()
MarkPullRequestReadyForReviewInput.model_rebuild()
MergeBranchInput.model_rebuild()
MergePullRequestInput.model_rebuild()
MilestoneOrder.model_rebuild()
MinimizeCommentInput.model_rebuild()
MoveProjectCardInput.model_rebuild()
MoveProjectColumnInput.model_rebuild()
OrgEnterpriseOwnerOrder.model_rebuild()
OrganizationOrder.model_rebuild()
PackageFileOrder.model_rebuild()
PackageOrder.model_rebuild()
PackageVersionOrder.model_rebuild()
PinIssueInput.model_rebuild()
ProjectCardImport.model_rebuild()
ProjectColumnImport.model_rebuild()
ProjectOrder.model_rebuild()
ProjectV2Collaborator.model_rebuild()
ProjectV2FieldOrder.model_rebuild()
ProjectV2FieldValue.model_rebuild()
ProjectV2Filters.model_rebuild()
ProjectV2ItemFieldValueOrder.model_rebuild()
ProjectV2ItemOrder.model_rebuild()
ProjectV2Order.model_rebuild()
ProjectV2SingleSelectFieldOptionInput.model_rebuild()
ProjectV2ViewOrder.model_rebuild()
ProjectV2WorkflowOrder.model_rebuild()
PublishSponsorsTierInput.model_rebuild()
PullRequestOrder.model_rebuild()
PullRequestParametersInput.model_rebuild()
ReactionOrder.model_rebuild()
RefNameConditionTargetInput.model_rebuild()
RefOrder.model_rebuild()
RefUpdate.model_rebuild()
RegenerateEnterpriseIdentityProviderRecoveryCodesInput.model_rebuild()
RegenerateVerifiableDomainTokenInput.model_rebuild()
RejectDeploymentsInput.model_rebuild()
ReleaseOrder.model_rebuild()
RemoveAssigneesFromAssignableInput.model_rebuild()
RemoveEnterpriseAdminInput.model_rebuild()
RemoveEnterpriseIdentityProviderInput.model_rebuild()
RemoveEnterpriseMemberInput.model_rebuild()
RemoveEnterpriseOrganizationInput.model_rebuild()
RemoveEnterpriseSupportEntitlementInput.model_rebuild()
RemoveLabelsFromLabelableInput.model_rebuild()
RemoveOutsideCollaboratorInput.model_rebuild()
RemoveReactionInput.model_rebuild()
RemoveStarInput.model_rebuild()
RemoveUpvoteInput.model_rebuild()
ReopenDiscussionInput.model_rebuild()
ReopenIssueInput.model_rebuild()
ReopenPullRequestInput.model_rebuild()
RepositoryIdConditionTargetInput.model_rebuild()
RepositoryInvitationOrder.model_rebuild()
RepositoryMigrationOrder.model_rebuild()
RepositoryNameConditionTargetInput.model_rebuild()
RepositoryOrder.model_rebuild()
RepositoryRuleConditionsInput.model_rebuild()
RepositoryRuleInput.model_rebuild()
RepositoryRulesetBypassActorInput.model_rebuild()
RequestReviewsInput.model_rebuild()
RequiredDeploymentsParametersInput.model_rebuild()
RequiredStatusCheckInput.model_rebuild()
RequiredStatusChecksParametersInput.model_rebuild()
RerequestCheckSuiteInput.model_rebuild()
ResolveReviewThreadInput.model_rebuild()
RetireSponsorsTierInput.model_rebuild()
RevertPullRequestInput.model_rebuild()
RevokeEnterpriseOrganizationsMigratorRoleInput.model_rebuild()
RevokeMigratorRoleInput.model_rebuild()
RuleParametersInput.model_rebuild()
SavedReplyOrder.model_rebuild()
SecurityAdvisoryIdentifierFilter.model_rebuild()
SecurityAdvisoryOrder.model_rebuild()
SecurityVulnerabilityOrder.model_rebuild()
SetEnterpriseIdentityProviderInput.model_rebuild()
SetOrganizationInteractionLimitInput.model_rebuild()
SetRepositoryInteractionLimitInput.model_rebuild()
SetUserInteractionLimitInput.model_rebuild()
SponsorOrder.model_rebuild()
SponsorableOrder.model_rebuild()
SponsorsActivityOrder.model_rebuild()
SponsorsTierOrder.model_rebuild()
SponsorshipNewsletterOrder.model_rebuild()
SponsorshipOrder.model_rebuild()
StarOrder.model_rebuild()
StartOrganizationMigrationInput.model_rebuild()
StartRepositoryMigrationInput.model_rebuild()
StatusCheckConfigurationInput.model_rebuild()
SubmitPullRequestReviewInput.model_rebuild()
TagNamePatternParametersInput.model_rebuild()
TeamDiscussionCommentOrder.model_rebuild()
TeamDiscussionOrder.model_rebuild()
TeamMemberOrder.model_rebuild()
TeamOrder.model_rebuild()
TeamRepositoryOrder.model_rebuild()
TransferEnterpriseOrganizationInput.model_rebuild()
TransferIssueInput.model_rebuild()
UnarchiveProjectV2ItemInput.model_rebuild()
UnarchiveRepositoryInput.model_rebuild()
UnfollowOrganizationInput.model_rebuild()
UnfollowUserInput.model_rebuild()
UnlinkProjectV2FromRepositoryInput.model_rebuild()
UnlinkProjectV2FromTeamInput.model_rebuild()
UnlinkRepositoryFromProjectInput.model_rebuild()
UnlockLockableInput.model_rebuild()
UnmarkDiscussionCommentAsAnswerInput.model_rebuild()
UnmarkFileAsViewedInput.model_rebuild()
UnmarkIssueAsDuplicateInput.model_rebuild()
UnmarkProjectV2AsTemplateInput.model_rebuild()
UnminimizeCommentInput.model_rebuild()
UnpinIssueInput.model_rebuild()
UnresolveReviewThreadInput.model_rebuild()
UpdateBranchProtectionRuleInput.model_rebuild()
UpdateCheckRunInput.model_rebuild()
UpdateCheckSuitePreferencesInput.model_rebuild()
UpdateDiscussionCommentInput.model_rebuild()
UpdateDiscussionInput.model_rebuild()
UpdateEnterpriseAdministratorRoleInput.model_rebuild()
UpdateEnterpriseAllowPrivateRepositoryForkingSettingInput.model_rebuild()
UpdateEnterpriseDefaultRepositoryPermissionSettingInput.model_rebuild()
UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingInput.model_rebuild()
UpdateEnterpriseMembersCanCreateRepositoriesSettingInput.model_rebuild()
UpdateEnterpriseMembersCanDeleteIssuesSettingInput.model_rebuild()
UpdateEnterpriseMembersCanDeleteRepositoriesSettingInput.model_rebuild()
UpdateEnterpriseMembersCanInviteCollaboratorsSettingInput.model_rebuild()
UpdateEnterpriseMembersCanMakePurchasesSettingInput.model_rebuild()
UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingInput.model_rebuild()
UpdateEnterpriseMembersCanViewDependencyInsightsSettingInput.model_rebuild()
UpdateEnterpriseOrganizationProjectsSettingInput.model_rebuild()
UpdateEnterpriseOwnerOrganizationRoleInput.model_rebuild()
UpdateEnterpriseProfileInput.model_rebuild()
UpdateEnterpriseRepositoryProjectsSettingInput.model_rebuild()
UpdateEnterpriseTeamDiscussionsSettingInput.model_rebuild()
UpdateEnterpriseTwoFactorAuthenticationRequiredSettingInput.model_rebuild()
UpdateEnvironmentInput.model_rebuild()
UpdateIpAllowListEnabledSettingInput.model_rebuild()
UpdateIpAllowListEntryInput.model_rebuild()
UpdateIpAllowListForInstalledAppsEnabledSettingInput.model_rebuild()
UpdateIssueCommentInput.model_rebuild()
UpdateIssueInput.model_rebuild()
UpdateLabelInput.model_rebuild()
UpdateNotificationRestrictionSettingInput.model_rebuild()
UpdateOrganizationAllowPrivateRepositoryForkingSettingInput.model_rebuild()
UpdateOrganizationWebCommitSignoffSettingInput.model_rebuild()
UpdateParametersInput.model_rebuild()
UpdateProjectCardInput.model_rebuild()
UpdateProjectColumnInput.model_rebuild()
UpdateProjectInput.model_rebuild()
UpdateProjectV2CollaboratorsInput.model_rebuild()
UpdateProjectV2DraftIssueInput.model_rebuild()
UpdateProjectV2Input.model_rebuild()
UpdateProjectV2ItemFieldValueInput.model_rebuild()
UpdateProjectV2ItemPositionInput.model_rebuild()
UpdatePullRequestBranchInput.model_rebuild()
UpdatePullRequestInput.model_rebuild()
UpdatePullRequestReviewCommentInput.model_rebuild()
UpdatePullRequestReviewInput.model_rebuild()
UpdateRefInput.model_rebuild()
UpdateRefsInput.model_rebuild()
UpdateRepositoryInput.model_rebuild()
UpdateRepositoryRulesetInput.model_rebuild()
UpdateRepositoryWebCommitSignoffSettingInput.model_rebuild()
UpdateSponsorshipPreferencesInput.model_rebuild()
UpdateSubscriptionInput.model_rebuild()
UpdateTeamDiscussionCommentInput.model_rebuild()
UpdateTeamDiscussionInput.model_rebuild()
UpdateTeamReviewAssignmentInput.model_rebuild()
UpdateTeamsRepositoryInput.model_rebuild()
UpdateTopicsInput.model_rebuild()
UserStatusOrder.model_rebuild()
VerifiableDomainOrder.model_rebuild()
VerifyVerifiableDomainInput.model_rebuild()
WorkflowRunOrder.model_rebuild()
