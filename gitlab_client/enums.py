# Generated by ariadne-codegen on 2023-09-11 17:39
# Source: schema/gitlab_api.schema

from enum import Enum


class AccessLevelEnum(str, Enum):
    NO_ACCESS = "NO_ACCESS"
    MINIMAL_ACCESS = "MINIMAL_ACCESS"
    GUEST = "GUEST"
    REPORTER = "REPORTER"
    DEVELOPER = "DEVELOPER"
    MAINTAINER = "MAINTAINER"
    OWNER = "OWNER"
    ADMIN = "ADMIN"


class AgentTokenStatus(str, Enum):
    ACTIVE = "ACTIVE"
    REVOKED = "REVOKED"


class AiCachedMessageRole(str, Enum):
    USER = "USER"
    ASSISTANT = "ASSISTANT"
    SYSTEM = "SYSTEM"


class AlertManagementAlertSort(str, Enum):
    STARTED_AT_ASC = "STARTED_AT_ASC"
    STARTED_AT_DESC = "STARTED_AT_DESC"
    ENDED_AT_ASC = "ENDED_AT_ASC"
    ENDED_AT_DESC = "ENDED_AT_DESC"
    CREATED_TIME_ASC = "CREATED_TIME_ASC"
    CREATED_TIME_DESC = "CREATED_TIME_DESC"
    UPDATED_TIME_ASC = "UPDATED_TIME_ASC"
    UPDATED_TIME_DESC = "UPDATED_TIME_DESC"
    EVENT_COUNT_ASC = "EVENT_COUNT_ASC"
    EVENT_COUNT_DESC = "EVENT_COUNT_DESC"
    SEVERITY_ASC = "SEVERITY_ASC"
    SEVERITY_DESC = "SEVERITY_DESC"
    STATUS_ASC = "STATUS_ASC"
    STATUS_DESC = "STATUS_DESC"
    updated_desc = "updated_desc"
    updated_asc = "updated_asc"
    created_desc = "created_desc"
    created_asc = "created_asc"
    UPDATED_DESC = "UPDATED_DESC"
    UPDATED_ASC = "UPDATED_ASC"
    CREATED_DESC = "CREATED_DESC"
    CREATED_ASC = "CREATED_ASC"


class AlertManagementDomainFilter(str, Enum):
    operations = "operations"
    threat_monitoring = "threat_monitoring"


class AlertManagementIntegrationType(str, Enum):
    PROMETHEUS = "PROMETHEUS"
    HTTP = "HTTP"


class AlertManagementPayloadAlertFieldName(str, Enum):
    TITLE = "TITLE"
    DESCRIPTION = "DESCRIPTION"
    START_TIME = "START_TIME"
    END_TIME = "END_TIME"
    SERVICE = "SERVICE"
    MONITORING_TOOL = "MONITORING_TOOL"
    HOSTS = "HOSTS"
    SEVERITY = "SEVERITY"
    FINGERPRINT = "FINGERPRINT"
    GITLAB_ENVIRONMENT_NAME = "GITLAB_ENVIRONMENT_NAME"


class AlertManagementPayloadAlertFieldType(str, Enum):
    ARRAY = "ARRAY"
    DATETIME = "DATETIME"
    STRING = "STRING"


class AlertManagementSeverity(str, Enum):
    CRITICAL = "CRITICAL"
    HIGH = "HIGH"
    MEDIUM = "MEDIUM"
    LOW = "LOW"
    INFO = "INFO"
    UNKNOWN = "UNKNOWN"


class AlertManagementStatus(str, Enum):
    TRIGGERED = "TRIGGERED"
    ACKNOWLEDGED = "ACKNOWLEDGED"
    RESOLVED = "RESOLVED"
    IGNORED = "IGNORED"


class ApiFuzzingScanMode(str, Enum):
    HAR = "HAR"
    OPENAPI = "OPENAPI"
    POSTMAN = "POSTMAN"


class ApprovalRuleType(str, Enum):
    REGULAR = "REGULAR"
    CODE_OWNER = "CODE_OWNER"
    REPORT_APPROVER = "REPORT_APPROVER"
    ANY_APPROVER = "ANY_APPROVER"


class AssigneeWildcardId(str, Enum):
    NONE = "NONE"
    ANY = "ANY"


class AvailabilityEnum(str, Enum):
    NOT_SET = "NOT_SET"
    BUSY = "BUSY"


class AvailableExportFields(str, Enum):
    ID = "ID"
    TITLE = "TITLE"
    DESCRIPTION = "DESCRIPTION"
    TYPE = "TYPE"
    AUTHOR = "AUTHOR"
    AUTHOR_USERNAME = "AUTHOR_USERNAME"
    CREATED_AT = "CREATED_AT"


class BlobViewersType(str, Enum):
    rich = "rich"
    simple = "simple"
    auxiliary = "auxiliary"


class CiCatalogResourceSort(str, Enum):
    NAME_ASC = "NAME_ASC"
    NAME_DESC = "NAME_DESC"
    updated_desc = "updated_desc"
    updated_asc = "updated_asc"
    created_desc = "created_desc"
    created_asc = "created_asc"
    UPDATED_DESC = "UPDATED_DESC"
    UPDATED_ASC = "UPDATED_ASC"
    CREATED_DESC = "CREATED_DESC"
    CREATED_ASC = "CREATED_ASC"


class CiConfigIncludeType(str, Enum):
    remote = "remote"
    local = "local"
    file = "file"
    template = "template"
    component = "component"


class CiConfigStatus(str, Enum):
    VALID = "VALID"
    INVALID = "INVALID"


class CiFreezePeriodStatus(str, Enum):
    ACTIVE = "ACTIVE"
    INACTIVE = "INACTIVE"


class CiGroupVariablesSort(str, Enum):
    CREATED_DESC = "CREATED_DESC"
    CREATED_ASC = "CREATED_ASC"
    KEY_DESC = "KEY_DESC"
    KEY_ASC = "KEY_ASC"


class CiJobKind(str, Enum):
    BUILD = "BUILD"
    BRIDGE = "BRIDGE"


class CiJobStatus(str, Enum):
    CREATED = "CREATED"
    WAITING_FOR_RESOURCE = "WAITING_FOR_RESOURCE"
    PREPARING = "PREPARING"
    PENDING = "PENDING"
    RUNNING = "RUNNING"
    SUCCESS = "SUCCESS"
    FAILED = "FAILED"
    CANCELED = "CANCELED"
    SKIPPED = "SKIPPED"
    MANUAL = "MANUAL"
    SCHEDULED = "SCHEDULED"


class CiJobTokenScopeDirection(str, Enum):
    OUTBOUND = "OUTBOUND"
    INBOUND = "INBOUND"


class CiRunnerAccessLevel(str, Enum):
    NOT_PROTECTED = "NOT_PROTECTED"
    REF_PROTECTED = "REF_PROTECTED"


class CiRunnerJobExecutionStatus(str, Enum):
    IDLE = "IDLE"
    RUNNING = "RUNNING"


class CiRunnerMembershipFilter(str, Enum):
    DIRECT = "DIRECT"
    DESCENDANTS = "DESCENDANTS"
    ALL_AVAILABLE = "ALL_AVAILABLE"


class CiRunnerSort(str, Enum):
    CONTACTED_ASC = "CONTACTED_ASC"
    CONTACTED_DESC = "CONTACTED_DESC"
    CREATED_ASC = "CREATED_ASC"
    CREATED_DESC = "CREATED_DESC"
    TOKEN_EXPIRES_AT_ASC = "TOKEN_EXPIRES_AT_ASC"
    TOKEN_EXPIRES_AT_DESC = "TOKEN_EXPIRES_AT_DESC"
    MOST_ACTIVE_DESC = "MOST_ACTIVE_DESC"


class CiRunnerStatus(str, Enum):
    ACTIVE = "ACTIVE"
    PAUSED = "PAUSED"
    ONLINE = "ONLINE"
    OFFLINE = "OFFLINE"
    STALE = "STALE"
    NEVER_CONTACTED = "NEVER_CONTACTED"


class CiRunnerType(str, Enum):
    INSTANCE_TYPE = "INSTANCE_TYPE"
    GROUP_TYPE = "GROUP_TYPE"
    PROJECT_TYPE = "PROJECT_TYPE"


class CiRunnerUpgradeStatus(str, Enum):
    INVALID = "INVALID"
    NOT_AVAILABLE = "NOT_AVAILABLE"
    AVAILABLE = "AVAILABLE"
    RECOMMENDED = "RECOMMENDED"


class CiVariableSort(str, Enum):
    KEY_ASC = "KEY_ASC"
    KEY_DESC = "KEY_DESC"


class CiVariableType(str, Enum):
    ENV_VAR = "ENV_VAR"
    FILE = "FILE"


class CodeQualityDegradationSeverity(str, Enum):
    BLOCKER = "BLOCKER"
    CRITICAL = "CRITICAL"
    MAJOR = "MAJOR"
    MINOR = "MINOR"
    INFO = "INFO"
    UNKNOWN = "UNKNOWN"


class CodequalityReportsComparerReportStatus(str, Enum):
    SUCCESS = "SUCCESS"
    FAILED = "FAILED"
    NOT_FOUND = "NOT_FOUND"


class CommitActionMode(str, Enum):
    CREATE = "CREATE"
    DELETE = "DELETE"
    MOVE = "MOVE"
    UPDATE = "UPDATE"
    CHMOD = "CHMOD"


class CommitEncoding(str, Enum):
    TEXT = "TEXT"
    BASE64 = "BASE64"


class ComparableSecurityReportType(str, Enum):
    SAST = "SAST"
    SECRET_DETECTION = "SECRET_DETECTION"
    CONTAINER_SCANNING = "CONTAINER_SCANNING"
    DEPENDENCY_SCANNING = "DEPENDENCY_SCANNING"
    DAST = "DAST"
    COVERAGE_FUZZING = "COVERAGE_FUZZING"
    API_FUZZING = "API_FUZZING"


class ComplianceFrameworkPresenceFilter(str, Enum):
    NONE = "NONE"
    ANY = "ANY"


class ComplianceStandardsAdherenceCheckName(str, Enum):
    PREVENT_APPROVAL_BY_MERGE_REQUEST_AUTHOR = "PREVENT_APPROVAL_BY_MERGE_REQUEST_AUTHOR"
    PREVENT_APPROVAL_BY_MERGE_REQUEST_COMMITTERS = "PREVENT_APPROVAL_BY_MERGE_REQUEST_COMMITTERS"
    AT_LEAST_TWO_APPROVALS = "AT_LEAST_TWO_APPROVALS"


class ComplianceStandardsAdherenceStandard(str, Enum):
    GITLAB = "GITLAB"


class ComplianceStandardsAdherenceStatus(str, Enum):
    SUCCESS = "SUCCESS"
    FAIL = "FAIL"


class ComplianceViolationReason(str, Enum):
    APPROVED_BY_MERGE_REQUEST_AUTHOR = "APPROVED_BY_MERGE_REQUEST_AUTHOR"
    APPROVED_BY_COMMITTER = "APPROVED_BY_COMMITTER"
    APPROVED_BY_INSUFFICIENT_USERS = "APPROVED_BY_INSUFFICIENT_USERS"


class ComplianceViolationSeverity(str, Enum):
    INFO = "INFO"
    LOW = "LOW"
    MEDIUM = "MEDIUM"
    HIGH = "HIGH"
    CRITICAL = "CRITICAL"


class ComplianceViolationSort(str, Enum):
    SEVERITY_LEVEL_DESC = "SEVERITY_LEVEL_DESC"
    SEVERITY_LEVEL_ASC = "SEVERITY_LEVEL_ASC"
    VIOLATION_REASON_DESC = "VIOLATION_REASON_DESC"
    VIOLATION_REASON_ASC = "VIOLATION_REASON_ASC"
    MERGE_REQUEST_TITLE_DESC = "MERGE_REQUEST_TITLE_DESC"
    MERGE_REQUEST_TITLE_ASC = "MERGE_REQUEST_TITLE_ASC"
    MERGED_AT_DESC = "MERGED_AT_DESC"
    MERGED_AT_ASC = "MERGED_AT_ASC"


class ConanMetadatumFileTypeEnum(str, Enum):
    RECIPE_FILE = "RECIPE_FILE"
    PACKAGE_FILE = "PACKAGE_FILE"


class ContactSort(str, Enum):
    FIRST_NAME_ASC = "FIRST_NAME_ASC"
    FIRST_NAME_DESC = "FIRST_NAME_DESC"
    LAST_NAME_ASC = "LAST_NAME_ASC"
    LAST_NAME_DESC = "LAST_NAME_DESC"
    EMAIL_ASC = "EMAIL_ASC"
    EMAIL_DESC = "EMAIL_DESC"
    PHONE_ASC = "PHONE_ASC"
    PHONE_DESC = "PHONE_DESC"
    DESCRIPTION_ASC = "DESCRIPTION_ASC"
    DESCRIPTION_DESC = "DESCRIPTION_DESC"
    ORGANIZATION_ASC = "ORGANIZATION_ASC"
    ORGANIZATION_DESC = "ORGANIZATION_DESC"
    updated_desc = "updated_desc"
    updated_asc = "updated_asc"
    created_desc = "created_desc"
    created_asc = "created_asc"
    UPDATED_DESC = "UPDATED_DESC"
    UPDATED_ASC = "UPDATED_ASC"
    CREATED_DESC = "CREATED_DESC"
    CREATED_ASC = "CREATED_ASC"


class ContainerExpirationPolicyCadenceEnum(str, Enum):
    EVERY_DAY = "EVERY_DAY"
    EVERY_WEEK = "EVERY_WEEK"
    EVERY_TWO_WEEKS = "EVERY_TWO_WEEKS"
    EVERY_MONTH = "EVERY_MONTH"
    EVERY_THREE_MONTHS = "EVERY_THREE_MONTHS"


class ContainerExpirationPolicyKeepEnum(str, Enum):
    ONE_TAG = "ONE_TAG"
    FIVE_TAGS = "FIVE_TAGS"
    TEN_TAGS = "TEN_TAGS"
    TWENTY_FIVE_TAGS = "TWENTY_FIVE_TAGS"
    FIFTY_TAGS = "FIFTY_TAGS"
    ONE_HUNDRED_TAGS = "ONE_HUNDRED_TAGS"


class ContainerExpirationPolicyOlderThanEnum(str, Enum):
    SEVEN_DAYS = "SEVEN_DAYS"
    FOURTEEN_DAYS = "FOURTEEN_DAYS"
    THIRTY_DAYS = "THIRTY_DAYS"
    SIXTY_DAYS = "SIXTY_DAYS"
    NINETY_DAYS = "NINETY_DAYS"


class ContainerRepositoryCleanupStatus(str, Enum):
    UNSCHEDULED = "UNSCHEDULED"
    SCHEDULED = "SCHEDULED"
    UNFINISHED = "UNFINISHED"
    ONGOING = "ONGOING"


class ContainerRepositorySort(str, Enum):
    NAME_ASC = "NAME_ASC"
    NAME_DESC = "NAME_DESC"
    updated_desc = "updated_desc"
    updated_asc = "updated_asc"
    created_desc = "created_desc"
    created_asc = "created_asc"
    UPDATED_DESC = "UPDATED_DESC"
    UPDATED_ASC = "UPDATED_ASC"
    CREATED_DESC = "CREATED_DESC"
    CREATED_ASC = "CREATED_ASC"


class ContainerRepositoryStatus(str, Enum):
    DELETE_SCHEDULED = "DELETE_SCHEDULED"
    DELETE_FAILED = "DELETE_FAILED"
    DELETE_ONGOING = "DELETE_ONGOING"


class ContainerRepositoryTagSort(str, Enum):
    NAME_ASC = "NAME_ASC"
    NAME_DESC = "NAME_DESC"


class CustomerRelationsContactState(str, Enum):
    all = "all"
    active = "active"
    inactive = "inactive"


class CustomerRelationsOrganizationState(str, Enum):
    all = "all"
    active = "active"
    inactive = "inactive"


class DastPreScanVerificationCheckType(str, Enum):
    CONNECTION = "CONNECTION"
    AUTHENTICATION = "AUTHENTICATION"
    CRAWLING = "CRAWLING"


class DastPreScanVerificationStatus(str, Enum):
    RUNNING = "RUNNING"
    COMPLETE = "COMPLETE"
    COMPLETE_WITH_ERRORS = "COMPLETE_WITH_ERRORS"
    FAILED = "FAILED"


class DastProfileCadenceUnit(str, Enum):
    DAY = "DAY"
    WEEK = "WEEK"
    MONTH = "MONTH"
    YEAR = "YEAR"


class DastScanMethodType(str, Enum):
    WEBSITE = "WEBSITE"
    OPENAPI = "OPENAPI"
    HAR = "HAR"
    POSTMAN_COLLECTION = "POSTMAN_COLLECTION"
    GRAPHQL = "GRAPHQL"


class DastScanTypeEnum(str, Enum):
    PASSIVE = "PASSIVE"
    ACTIVE = "ACTIVE"


class DastSiteProfileValidationStatusEnum(str, Enum):
    NONE = "NONE"
    PENDING_VALIDATION = "PENDING_VALIDATION"
    INPROGRESS_VALIDATION = "INPROGRESS_VALIDATION"
    PASSED_VALIDATION = "PASSED_VALIDATION"
    FAILED_VALIDATION = "FAILED_VALIDATION"


class DastSiteValidationStatusEnum(str, Enum):
    PENDING_VALIDATION = "PENDING_VALIDATION"
    INPROGRESS_VALIDATION = "INPROGRESS_VALIDATION"
    PASSED_VALIDATION = "PASSED_VALIDATION"
    FAILED_VALIDATION = "FAILED_VALIDATION"


class DastSiteValidationStrategyEnum(str, Enum):
    TEXT_FILE = "TEXT_FILE"
    HEADER = "HEADER"
    META_TAG = "META_TAG"


class DastTargetTypeEnum(str, Enum):
    WEBSITE = "WEBSITE"
    API = "API"


class DataVisualizationColorEnum(str, Enum):
    BLUE = "BLUE"
    ORANGE = "ORANGE"
    AQUA = "AQUA"
    GREEN = "GREEN"
    MAGENTA = "MAGENTA"


class DataVisualizationWeightEnum(str, Enum):
    WEIGHT_50 = "WEIGHT_50"
    WEIGHT_100 = "WEIGHT_100"
    WEIGHT_200 = "WEIGHT_200"
    WEIGHT_300 = "WEIGHT_300"
    WEIGHT_400 = "WEIGHT_400"
    WEIGHT_500 = "WEIGHT_500"
    WEIGHT_600 = "WEIGHT_600"
    WEIGHT_700 = "WEIGHT_700"
    WEIGHT_800 = "WEIGHT_800"
    WEIGHT_900 = "WEIGHT_900"
    WEIGHT_950 = "WEIGHT_950"


class DependencyProxyManifestStatus(str, Enum):
    DEFAULT = "DEFAULT"
    PENDING_DESTRUCTION = "PENDING_DESTRUCTION"
    PROCESSING = "PROCESSING"
    ERROR = "ERROR"


class DependencySort(str, Enum):
    NAME_DESC = "NAME_DESC"
    NAME_ASC = "NAME_ASC"
    PACKAGER_DESC = "PACKAGER_DESC"
    PACKAGER_ASC = "PACKAGER_ASC"


class DeploymentApprovalSummaryStatus(str, Enum):
    APPROVED = "APPROVED"
    REJECTED = "REJECTED"
    PENDING_APPROVAL = "PENDING_APPROVAL"


class DeploymentsApprovalStatus(str, Enum):
    APPROVED = "APPROVED"
    REJECTED = "REJECTED"


class DeploymentStatus(str, Enum):
    CREATED = "CREATED"
    RUNNING = "RUNNING"
    SUCCESS = "SUCCESS"
    FAILED = "FAILED"
    CANCELED = "CANCELED"
    SKIPPED = "SKIPPED"
    BLOCKED = "BLOCKED"


class DeploymentTier(str, Enum):
    PRODUCTION = "PRODUCTION"
    STAGING = "STAGING"
    TESTING = "TESTING"
    DEVELOPMENT = "DEVELOPMENT"
    OTHER = "OTHER"


class DesignCollectionCopyState(str, Enum):
    READY = "READY"
    IN_PROGRESS = "IN_PROGRESS"
    ERROR = "ERROR"


class DesignVersionEvent(str, Enum):
    NONE = "NONE"
    CREATION = "CREATION"
    MODIFICATION = "MODIFICATION"
    DELETION = "DELETION"


class DetailedMergeStatus(str, Enum):
    UNCHECKED = "UNCHECKED"
    CHECKING = "CHECKING"
    MERGEABLE = "MERGEABLE"
    BROKEN_STATUS = "BROKEN_STATUS"
    CI_MUST_PASS = "CI_MUST_PASS"
    CI_STILL_RUNNING = "CI_STILL_RUNNING"
    DISCUSSIONS_NOT_RESOLVED = "DISCUSSIONS_NOT_RESOLVED"
    DRAFT_STATUS = "DRAFT_STATUS"
    NOT_OPEN = "NOT_OPEN"
    NOT_APPROVED = "NOT_APPROVED"
    BLOCKED_STATUS = "BLOCKED_STATUS"
    POLICIES_DENIED = "POLICIES_DENIED"
    EXTERNAL_STATUS_CHECKS = "EXTERNAL_STATUS_CHECKS"
    PREPARING = "PREPARING"


class DiffPositionType(str, Enum):
    text = "text"
    image = "image"
    file = "file"


class DoraMetricBucketingInterval(str, Enum):
    ALL = "ALL"
    MONTHLY = "MONTHLY"
    DAILY = "DAILY"


class DoraMetricType(str, Enum):
    DEPLOYMENT_FREQUENCY = "DEPLOYMENT_FREQUENCY"
    LEAD_TIME_FOR_CHANGES = "LEAD_TIME_FOR_CHANGES"
    TIME_TO_RESTORE_SERVICE = "TIME_TO_RESTORE_SERVICE"
    CHANGE_FAILURE_RATE = "CHANGE_FAILURE_RATE"


class EntryType(str, Enum):
    tree = "tree"
    blob = "blob"
    commit = "commit"


class EpicSort(str, Enum):
    start_date_desc = "start_date_desc"
    start_date_asc = "start_date_asc"
    end_date_desc = "end_date_desc"
    end_date_asc = "end_date_asc"
    START_DATE_DESC = "START_DATE_DESC"
    START_DATE_ASC = "START_DATE_ASC"
    END_DATE_DESC = "END_DATE_DESC"
    END_DATE_ASC = "END_DATE_ASC"
    TITLE_DESC = "TITLE_DESC"
    TITLE_ASC = "TITLE_ASC"
    CREATED_AT_ASC = "CREATED_AT_ASC"
    CREATED_AT_DESC = "CREATED_AT_DESC"
    UPDATED_AT_ASC = "UPDATED_AT_ASC"
    UPDATED_AT_DESC = "UPDATED_AT_DESC"


class EpicState(str, Enum):
    all = "all"
    opened = "opened"
    closed = "closed"


class EpicStateEvent(str, Enum):
    REOPEN = "REOPEN"
    CLOSE = "CLOSE"


class EpicWildcardId(str, Enum):
    NONE = "NONE"
    ANY = "ANY"


class EscalationRuleStatus(str, Enum):
    ACKNOWLEDGED = "ACKNOWLEDGED"
    RESOLVED = "RESOLVED"


class EventAction(str, Enum):
    CREATED = "CREATED"
    UPDATED = "UPDATED"
    CLOSED = "CLOSED"
    REOPENED = "REOPENED"
    PUSHED = "PUSHED"
    COMMENTED = "COMMENTED"
    MERGED = "MERGED"
    JOINED = "JOINED"
    LEFT = "LEFT"
    DESTROYED = "DESTROYED"
    EXPIRED = "EXPIRED"
    APPROVED = "APPROVED"


class FindingReportsComparerStatus(str, Enum):
    PARSED = "PARSED"
    PARSING = "PARSING"
    ERROR = "ERROR"


class ForecastStatus(str, Enum):
    READY = "READY"
    UNAVAILABLE = "UNAVAILABLE"


class GeoRegistryAction(str, Enum):
    REVERIFY = "REVERIFY"
    RESYNC = "RESYNC"


class GeoRegistryClass(str, Enum):
    CONTAINER_REPOSITORY_REGISTRY = "CONTAINER_REPOSITORY_REGISTRY"
    DESIGN_MANAGEMENT_REPOSITORY_REGISTRY = "DESIGN_MANAGEMENT_REPOSITORY_REGISTRY"
    JOB_ARTIFACT_REGISTRY = "JOB_ARTIFACT_REGISTRY"
    LFS_OBJECT_REGISTRY = "LFS_OBJECT_REGISTRY"
    MERGE_REQUEST_DIFF_REGISTRY = "MERGE_REQUEST_DIFF_REGISTRY"
    PACKAGE_FILE_REGISTRY = "PACKAGE_FILE_REGISTRY"
    PIPELINE_ARTIFACT_REGISTRY = "PIPELINE_ARTIFACT_REGISTRY"
    TERRAFORM_STATE_VERSION_REGISTRY = "TERRAFORM_STATE_VERSION_REGISTRY"
    UPLOAD_REGISTRY = "UPLOAD_REGISTRY"
    SNIPPET_REPOSITORY_REGISTRY = "SNIPPET_REPOSITORY_REGISTRY"
    GROUP_WIKI_REPOSITORY_REGISTRY = "GROUP_WIKI_REPOSITORY_REGISTRY"
    PAGES_DEPLOYMENT_REGISTRY = "PAGES_DEPLOYMENT_REGISTRY"
    CI_SECURE_FILE_REGISTRY = "CI_SECURE_FILE_REGISTRY"
    DEPENDENCY_PROXY_BLOB_REGISTRY = "DEPENDENCY_PROXY_BLOB_REGISTRY"
    DEPENDENCY_PROXY_MANIFEST_REGISTRY = "DEPENDENCY_PROXY_MANIFEST_REGISTRY"
    PROJECT_WIKI_REPOSITORY_REGISTRY = "PROJECT_WIKI_REPOSITORY_REGISTRY"
    PROJECT_REPOSITORY_REGISTRY = "PROJECT_REPOSITORY_REGISTRY"


class GitlabSubscriptionsUserRole(str, Enum):
    GUEST = "GUEST"
    REPORTER = "REPORTER"
    DEVELOPER = "DEVELOPER"
    MAINTAINER = "MAINTAINER"
    OWNER = "OWNER"


class GroupMemberRelation(str, Enum):
    DIRECT = "DIRECT"
    INHERITED = "INHERITED"
    DESCENDANTS = "DESCENDANTS"
    SHARED_FROM_GROUPS = "SHARED_FROM_GROUPS"


class GroupPermission(str, Enum):
    CREATE_PROJECTS = "CREATE_PROJECTS"
    TRANSFER_PROJECTS = "TRANSFER_PROJECTS"
    IMPORT_PROJECTS = "IMPORT_PROJECTS"


class GroupReleaseSort(str, Enum):
    RELEASED_AT_DESC = "RELEASED_AT_DESC"
    RELEASED_AT_ASC = "RELEASED_AT_ASC"


class HealthStatus(str, Enum):
    onTrack = "onTrack"
    needsAttention = "needsAttention"
    atRisk = "atRisk"


class HealthStatusFilter(str, Enum):
    NONE = "NONE"
    ANY = "ANY"
    onTrack = "onTrack"
    needsAttention = "needsAttention"
    atRisk = "atRisk"


class IssuableResourceLinkType(str, Enum):
    general = "general"
    zoom = "zoom"
    slack = "slack"
    pagerduty = "pagerduty"


class IssuableSearchableField(str, Enum):
    TITLE = "TITLE"
    DESCRIPTION = "DESCRIPTION"


class IssuableSeverity(str, Enum):
    UNKNOWN = "UNKNOWN"
    LOW = "LOW"
    MEDIUM = "MEDIUM"
    HIGH = "HIGH"
    CRITICAL = "CRITICAL"


class IssuableState(str, Enum):
    opened = "opened"
    closed = "closed"
    locked = "locked"
    all = "all"


class IssuableSubscriptionEvent(str, Enum):
    SUBSCRIBE = "SUBSCRIBE"
    UNSUBSCRIBE = "UNSUBSCRIBE"


class IssueCreationIterationWildcardId(str, Enum):
    CURRENT = "CURRENT"


class IssueEscalationStatus(str, Enum):
    TRIGGERED = "TRIGGERED"
    ACKNOWLEDGED = "ACKNOWLEDGED"
    RESOLVED = "RESOLVED"
    IGNORED = "IGNORED"


class IssueSort(str, Enum):
    DUE_DATE_ASC = "DUE_DATE_ASC"
    DUE_DATE_DESC = "DUE_DATE_DESC"
    RELATIVE_POSITION_ASC = "RELATIVE_POSITION_ASC"
    SEVERITY_ASC = "SEVERITY_ASC"
    SEVERITY_DESC = "SEVERITY_DESC"
    TITLE_ASC = "TITLE_ASC"
    TITLE_DESC = "TITLE_DESC"
    POPULARITY_ASC = "POPULARITY_ASC"
    POPULARITY_DESC = "POPULARITY_DESC"
    ESCALATION_STATUS_ASC = "ESCALATION_STATUS_ASC"
    ESCALATION_STATUS_DESC = "ESCALATION_STATUS_DESC"
    CLOSED_AT_ASC = "CLOSED_AT_ASC"
    CLOSED_AT_DESC = "CLOSED_AT_DESC"
    WEIGHT_ASC = "WEIGHT_ASC"
    WEIGHT_DESC = "WEIGHT_DESC"
    PUBLISHED_ASC = "PUBLISHED_ASC"
    PUBLISHED_DESC = "PUBLISHED_DESC"
    SLA_DUE_AT_ASC = "SLA_DUE_AT_ASC"
    SLA_DUE_AT_DESC = "SLA_DUE_AT_DESC"
    BLOCKING_ISSUES_ASC = "BLOCKING_ISSUES_ASC"
    BLOCKING_ISSUES_DESC = "BLOCKING_ISSUES_DESC"
    HEALTH_STATUS_ASC = "HEALTH_STATUS_ASC"
    HEALTH_STATUS_DESC = "HEALTH_STATUS_DESC"
    PRIORITY_ASC = "PRIORITY_ASC"
    PRIORITY_DESC = "PRIORITY_DESC"
    LABEL_PRIORITY_ASC = "LABEL_PRIORITY_ASC"
    LABEL_PRIORITY_DESC = "LABEL_PRIORITY_DESC"
    MILESTONE_DUE_ASC = "MILESTONE_DUE_ASC"
    MILESTONE_DUE_DESC = "MILESTONE_DUE_DESC"
    updated_desc = "updated_desc"
    updated_asc = "updated_asc"
    created_desc = "created_desc"
    created_asc = "created_asc"
    UPDATED_DESC = "UPDATED_DESC"
    UPDATED_ASC = "UPDATED_ASC"
    CREATED_DESC = "CREATED_DESC"
    CREATED_ASC = "CREATED_ASC"


class IssueState(str, Enum):
    opened = "opened"
    closed = "closed"
    locked = "locked"
    all = "all"


class IssueStateEvent(str, Enum):
    REOPEN = "REOPEN"
    CLOSE = "CLOSE"


class IssueType(str, Enum):
    ISSUE = "ISSUE"
    INCIDENT = "INCIDENT"
    TEST_CASE = "TEST_CASE"
    REQUIREMENT = "REQUIREMENT"
    TASK = "TASK"
    OBJECTIVE = "OBJECTIVE"
    KEY_RESULT = "KEY_RESULT"


class IterationSearchableField(str, Enum):
    TITLE = "TITLE"
    CADENCE_TITLE = "CADENCE_TITLE"


class IterationSort(str, Enum):
    CADENCE_AND_DUE_DATE_ASC = "CADENCE_AND_DUE_DATE_ASC"
    CADENCE_AND_DUE_DATE_DESC = "CADENCE_AND_DUE_DATE_DESC"


class IterationState(str, Enum):
    upcoming = "upcoming"
    current = "current"
    opened = "opened"
    closed = "closed"
    all = "all"


class IterationWildcardId(str, Enum):
    NONE = "NONE"
    ANY = "ANY"
    CURRENT = "CURRENT"


class JobArtifactFileType(str, Enum):
    ARCHIVE = "ARCHIVE"
    METADATA = "METADATA"
    TRACE = "TRACE"
    JUNIT = "JUNIT"
    METRICS = "METRICS"
    METRICS_REFEREE = "METRICS_REFEREE"
    NETWORK_REFEREE = "NETWORK_REFEREE"
    DOTENV = "DOTENV"
    COBERTURA = "COBERTURA"
    CLUSTER_APPLICATIONS = "CLUSTER_APPLICATIONS"
    LSIF = "LSIF"
    CYCLONEDX = "CYCLONEDX"
    ANNOTATIONS = "ANNOTATIONS"
    SAST = "SAST"
    SECRET_DETECTION = "SECRET_DETECTION"
    DEPENDENCY_SCANNING = "DEPENDENCY_SCANNING"
    CONTAINER_SCANNING = "CONTAINER_SCANNING"
    CLUSTER_IMAGE_SCANNING = "CLUSTER_IMAGE_SCANNING"
    DAST = "DAST"
    LICENSE_SCANNING = "LICENSE_SCANNING"
    ACCESSIBILITY = "ACCESSIBILITY"
    CODEQUALITY = "CODEQUALITY"
    PERFORMANCE = "PERFORMANCE"
    BROWSER_PERFORMANCE = "BROWSER_PERFORMANCE"
    LOAD_PERFORMANCE = "LOAD_PERFORMANCE"
    TERRAFORM = "TERRAFORM"
    REQUIREMENTS = "REQUIREMENTS"
    REQUIREMENTS_V2 = "REQUIREMENTS_V2"
    COVERAGE_FUZZING = "COVERAGE_FUZZING"
    API_FUZZING = "API_FUZZING"


class ListLimitMetric(str, Enum):
    all_metrics = "all_metrics"
    issue_count = "issue_count"
    issue_weights = "issue_weights"


class MeasurementIdentifier(str, Enum):
    PROJECTS = "PROJECTS"
    USERS = "USERS"
    ISSUES = "ISSUES"
    MERGE_REQUESTS = "MERGE_REQUESTS"
    GROUPS = "GROUPS"
    PIPELINES = "PIPELINES"
    PIPELINES_SUCCEEDED = "PIPELINES_SUCCEEDED"
    PIPELINES_FAILED = "PIPELINES_FAILED"
    PIPELINES_CANCELED = "PIPELINES_CANCELED"
    PIPELINES_SKIPPED = "PIPELINES_SKIPPED"


class MemberAccessLevel(str, Enum):
    GUEST = "GUEST"
    REPORTER = "REPORTER"
    DEVELOPER = "DEVELOPER"
    MAINTAINER = "MAINTAINER"
    OWNER = "OWNER"
    MINIMAL_ACCESS = "MINIMAL_ACCESS"


class MemberAccessLevelName(str, Enum):
    GUEST = "GUEST"
    REPORTER = "REPORTER"
    DEVELOPER = "DEVELOPER"
    MAINTAINER = "MAINTAINER"
    OWNER = "OWNER"


class MemberSort(str, Enum):
    ACCESS_LEVEL_ASC = "ACCESS_LEVEL_ASC"
    ACCESS_LEVEL_DESC = "ACCESS_LEVEL_DESC"
    USER_FULL_NAME_ASC = "USER_FULL_NAME_ASC"
    USER_FULL_NAME_DESC = "USER_FULL_NAME_DESC"
    updated_desc = "updated_desc"
    updated_asc = "updated_asc"
    created_desc = "created_desc"
    created_asc = "created_asc"
    UPDATED_DESC = "UPDATED_DESC"
    UPDATED_ASC = "UPDATED_ASC"
    CREATED_DESC = "CREATED_DESC"
    CREATED_ASC = "CREATED_ASC"


class MergeRequestNewState(str, Enum):
    OPEN = "OPEN"
    CLOSED = "CLOSED"


class MergeRequestReviewState(str, Enum):
    UNREVIEWED = "UNREVIEWED"
    REVIEWED = "REVIEWED"


class MergeRequestSort(str, Enum):
    MERGED_AT_ASC = "MERGED_AT_ASC"
    MERGED_AT_DESC = "MERGED_AT_DESC"
    CLOSED_AT_ASC = "CLOSED_AT_ASC"
    CLOSED_AT_DESC = "CLOSED_AT_DESC"
    TITLE_ASC = "TITLE_ASC"
    TITLE_DESC = "TITLE_DESC"
    PRIORITY_ASC = "PRIORITY_ASC"
    PRIORITY_DESC = "PRIORITY_DESC"
    LABEL_PRIORITY_ASC = "LABEL_PRIORITY_ASC"
    LABEL_PRIORITY_DESC = "LABEL_PRIORITY_DESC"
    MILESTONE_DUE_ASC = "MILESTONE_DUE_ASC"
    MILESTONE_DUE_DESC = "MILESTONE_DUE_DESC"
    updated_desc = "updated_desc"
    updated_asc = "updated_asc"
    created_desc = "created_desc"
    created_asc = "created_asc"
    UPDATED_DESC = "UPDATED_DESC"
    UPDATED_ASC = "UPDATED_ASC"
    CREATED_DESC = "CREATED_DESC"
    CREATED_ASC = "CREATED_ASC"


class MergeRequestState(str, Enum):
    merged = "merged"
    opened = "opened"
    closed = "closed"
    locked = "locked"
    all = "all"


class MergeStatus(str, Enum):
    UNCHECKED = "UNCHECKED"
    CHECKING = "CHECKING"
    CAN_BE_MERGED = "CAN_BE_MERGED"
    CANNOT_BE_MERGED = "CANNOT_BE_MERGED"
    CANNOT_BE_MERGED_RECHECK = "CANNOT_BE_MERGED_RECHECK"


class MergeStrategyEnum(str, Enum):
    MERGE_TRAIN = "MERGE_TRAIN"
    ADD_TO_MERGE_TRAIN_WHEN_PIPELINE_SUCCEEDS = "ADD_TO_MERGE_TRAIN_WHEN_PIPELINE_SUCCEEDS"
    MERGE_WHEN_CHECKS_PASS = "MERGE_WHEN_CHECKS_PASS"
    MERGE_WHEN_PIPELINE_SUCCEEDS = "MERGE_WHEN_PIPELINE_SUCCEEDS"


class MilestoneSort(str, Enum):
    DUE_DATE_ASC = "DUE_DATE_ASC"
    DUE_DATE_DESC = "DUE_DATE_DESC"
    EXPIRED_LAST_DUE_DATE_ASC = "EXPIRED_LAST_DUE_DATE_ASC"
    EXPIRED_LAST_DUE_DATE_DESC = "EXPIRED_LAST_DUE_DATE_DESC"
    updated_desc = "updated_desc"
    updated_asc = "updated_asc"
    created_desc = "created_desc"
    created_asc = "created_asc"
    UPDATED_DESC = "UPDATED_DESC"
    UPDATED_ASC = "UPDATED_ASC"
    CREATED_DESC = "CREATED_DESC"
    CREATED_ASC = "CREATED_ASC"


class MilestoneStateEnum(str, Enum):
    active = "active"
    closed = "closed"


class MilestoneWildcardId(str, Enum):
    NONE = "NONE"
    ANY = "ANY"
    STARTED = "STARTED"
    UPCOMING = "UPCOMING"


class MoveType(str, Enum):
    before = "before"
    after = "after"


class MutationOperationMode(str, Enum):
    REPLACE = "REPLACE"
    APPEND = "APPEND"
    REMOVE = "REMOVE"


class NamespaceProjectSort(str, Enum):
    SIMILARITY = "SIMILARITY"
    ACTIVITY_DESC = "ACTIVITY_DESC"
    STORAGE = "STORAGE"
    STORAGE_SIZE_ASC = "STORAGE_SIZE_ASC"
    STORAGE_SIZE_DESC = "STORAGE_SIZE_DESC"


class NegatedIterationWildcardId(str, Enum):
    CURRENT = "CURRENT"


class NegatedMilestoneWildcardId(str, Enum):
    STARTED = "STARTED"
    UPCOMING = "UPCOMING"


class NetworkPolicyKind(str, Enum):
    CiliumNetworkPolicy = "CiliumNetworkPolicy"
    NetworkPolicy = "NetworkPolicy"


class NotesFilterType(str, Enum):
    ALL_NOTES = "ALL_NOTES"
    ONLY_COMMENTS = "ONLY_COMMENTS"
    ONLY_ACTIVITY = "ONLY_ACTIVITY"


class OncallRotationUnitEnum(str, Enum):
    HOURS = "HOURS"
    DAYS = "DAYS"
    WEEKS = "WEEKS"


class OrganizationGroupSort(str, Enum):
    ID_ASC = "ID_ASC"
    ID_DESC = "ID_DESC"
    NAME_ASC = "NAME_ASC"
    NAME_DESC = "NAME_DESC"
    PATH_ASC = "PATH_ASC"
    PATH_DESC = "PATH_DESC"
    UPDATED_AT_ASC = "UPDATED_AT_ASC"
    UPDATED_AT_DESC = "UPDATED_AT_DESC"
    CREATED_AT_ASC = "CREATED_AT_ASC"
    CREATED_AT_DESC = "CREATED_AT_DESC"


class OrganizationSort(str, Enum):
    NAME_ASC = "NAME_ASC"
    NAME_DESC = "NAME_DESC"
    DESCRIPTION_ASC = "DESCRIPTION_ASC"
    DESCRIPTION_DESC = "DESCRIPTION_DESC"
    DEFAULT_RATE_ASC = "DEFAULT_RATE_ASC"
    DEFAULT_RATE_DESC = "DEFAULT_RATE_DESC"
    updated_desc = "updated_desc"
    updated_asc = "updated_asc"
    created_desc = "created_desc"
    created_asc = "created_asc"
    UPDATED_DESC = "UPDATED_DESC"
    UPDATED_ASC = "UPDATED_ASC"
    CREATED_DESC = "CREATED_DESC"
    CREATED_ASC = "CREATED_ASC"


class PackageDependencyType(str, Enum):
    DEPENDENCIES = "DEPENDENCIES"
    DEV_DEPENDENCIES = "DEV_DEPENDENCIES"
    BUNDLE_DEPENDENCIES = "BUNDLE_DEPENDENCIES"
    PEER_DEPENDENCIES = "PEER_DEPENDENCIES"


class PackageGroupSort(str, Enum):
    PROJECT_PATH_DESC = "PROJECT_PATH_DESC"
    PROJECT_PATH_ASC = "PROJECT_PATH_ASC"
    CREATED_DESC = "CREATED_DESC"
    CREATED_ASC = "CREATED_ASC"
    NAME_DESC = "NAME_DESC"
    NAME_ASC = "NAME_ASC"
    VERSION_DESC = "VERSION_DESC"
    VERSION_ASC = "VERSION_ASC"
    TYPE_DESC = "TYPE_DESC"
    TYPE_ASC = "TYPE_ASC"


class PackageManager(str, Enum):
    BUNDLER = "BUNDLER"
    YARN = "YARN"
    NPM = "NPM"
    PNPM = "PNPM"
    MAVEN = "MAVEN"
    COMPOSER = "COMPOSER"
    PIP = "PIP"
    CONAN = "CONAN"
    GO = "GO"
    NUGET = "NUGET"
    SBT = "SBT"
    GRADLE = "GRADLE"
    PIPENV = "PIPENV"
    SETUPTOOLS = "SETUPTOOLS"


class PackagesCleanupKeepDuplicatedPackageFilesEnum(str, Enum):
    ALL_PACKAGE_FILES = "ALL_PACKAGE_FILES"
    ONE_PACKAGE_FILE = "ONE_PACKAGE_FILE"
    TEN_PACKAGE_FILES = "TEN_PACKAGE_FILES"
    TWENTY_PACKAGE_FILES = "TWENTY_PACKAGE_FILES"
    THIRTY_PACKAGE_FILES = "THIRTY_PACKAGE_FILES"
    FORTY_PACKAGE_FILES = "FORTY_PACKAGE_FILES"
    FIFTY_PACKAGE_FILES = "FIFTY_PACKAGE_FILES"


class PackageSort(str, Enum):
    CREATED_DESC = "CREATED_DESC"
    CREATED_ASC = "CREATED_ASC"
    NAME_DESC = "NAME_DESC"
    NAME_ASC = "NAME_ASC"
    VERSION_DESC = "VERSION_DESC"
    VERSION_ASC = "VERSION_ASC"
    TYPE_DESC = "TYPE_DESC"
    TYPE_ASC = "TYPE_ASC"


class PackageStatus(str, Enum):
    DEFAULT = "DEFAULT"
    HIDDEN = "HIDDEN"
    PROCESSING = "PROCESSING"
    ERROR = "ERROR"
    PENDING_DESTRUCTION = "PENDING_DESTRUCTION"


class PackageTypeEnum(str, Enum):
    MAVEN = "MAVEN"
    NPM = "NPM"
    CONAN = "CONAN"
    NUGET = "NUGET"
    PYPI = "PYPI"
    COMPOSER = "COMPOSER"
    GENERIC = "GENERIC"
    GOLANG = "GOLANG"
    DEBIAN = "DEBIAN"
    RUBYGEMS = "RUBYGEMS"
    HELM = "HELM"
    TERRAFORM_MODULE = "TERRAFORM_MODULE"
    RPM = "RPM"
    ML_MODEL = "ML_MODEL"


class PipelineConfigSourceEnum(str, Enum):
    UNKNOWN_SOURCE = "UNKNOWN_SOURCE"
    REPOSITORY_SOURCE = "REPOSITORY_SOURCE"
    AUTO_DEVOPS_SOURCE = "AUTO_DEVOPS_SOURCE"
    WEBIDE_SOURCE = "WEBIDE_SOURCE"
    REMOTE_SOURCE = "REMOTE_SOURCE"
    EXTERNAL_PROJECT_SOURCE = "EXTERNAL_PROJECT_SOURCE"
    BRIDGE_SOURCE = "BRIDGE_SOURCE"
    PARAMETER_SOURCE = "PARAMETER_SOURCE"
    COMPLIANCE_SOURCE = "COMPLIANCE_SOURCE"
    SECURITY_POLICIES_DEFAULT_SOURCE = "SECURITY_POLICIES_DEFAULT_SOURCE"


class PipelineMergeRequestEventType(str, Enum):
    MERGED_RESULT = "MERGED_RESULT"
    DETACHED = "DETACHED"
    MERGE_TRAIN = "MERGE_TRAIN"


class PipelineScheduleStatus(str, Enum):
    ACTIVE = "ACTIVE"
    INACTIVE = "INACTIVE"


class PipelineScopeEnum(str, Enum):
    RUNNING = "RUNNING"
    PENDING = "PENDING"
    FINISHED = "FINISHED"
    BRANCHES = "BRANCHES"
    TAGS = "TAGS"


class PipelineStatusEnum(str, Enum):
    CREATED = "CREATED"
    WAITING_FOR_RESOURCE = "WAITING_FOR_RESOURCE"
    PREPARING = "PREPARING"
    PENDING = "PENDING"
    RUNNING = "RUNNING"
    FAILED = "FAILED"
    SUCCESS = "SUCCESS"
    CANCELED = "CANCELED"
    SKIPPED = "SKIPPED"
    MANUAL = "MANUAL"
    SCHEDULED = "SCHEDULED"


class ProductAnalyticsState(str, Enum):
    CREATE_INSTANCE = "CREATE_INSTANCE"
    LOADING_INSTANCE = "LOADING_INSTANCE"
    WAITING_FOR_EVENTS = "WAITING_FOR_EVENTS"
    COMPLETE = "COMPLETE"


class ProjectMemberRelation(str, Enum):
    DIRECT = "DIRECT"
    INHERITED = "INHERITED"
    DESCENDANTS = "DESCENDANTS"
    INVITED_GROUPS = "INVITED_GROUPS"
    SHARED_INTO_ANCESTORS = "SHARED_INTO_ANCESTORS"


class RefType(str, Enum):
    HEADS = "HEADS"
    TAGS = "TAGS"


class RegistryState(str, Enum):
    PENDING = "PENDING"
    STARTED = "STARTED"
    SYNCED = "SYNCED"
    FAILED = "FAILED"


class RelativePositionType(str, Enum):
    BEFORE = "BEFORE"
    AFTER = "AFTER"


class ReleaseAssetLinkType(str, Enum):
    OTHER = "OTHER"
    RUNBOOK = "RUNBOOK"
    PACKAGE = "PACKAGE"
    IMAGE = "IMAGE"


class ReleaseSort(str, Enum):
    CREATED_DESC = "CREATED_DESC"
    CREATED_ASC = "CREATED_ASC"
    RELEASED_AT_DESC = "RELEASED_AT_DESC"
    RELEASED_AT_ASC = "RELEASED_AT_ASC"


class ReleaseTagWildcardId(str, Enum):
    NONE = "NONE"
    ANY = "ANY"


class ReplicationStateEnum(str, Enum):
    PENDING = "PENDING"
    STARTED = "STARTED"
    SYNCED = "SYNCED"
    FAILED = "FAILED"


class RequirementState(str, Enum):
    OPENED = "OPENED"
    ARCHIVED = "ARCHIVED"


class RequirementStatusFilter(str, Enum):
    MISSING = "MISSING"
    PASSED = "PASSED"
    FAILED = "FAILED"


class SastUiComponentSize(str, Enum):
    SMALL = "SMALL"
    MEDIUM = "MEDIUM"
    LARGE = "LARGE"


class ScanStatus(str, Enum):
    CREATED = "CREATED"
    SUCCEEDED = "SUCCEEDED"
    JOB_FAILED = "JOB_FAILED"
    REPORT_ERROR = "REPORT_ERROR"
    PREPARING = "PREPARING"
    PREPARATION_FAILED = "PREPARATION_FAILED"
    PURGED = "PURGED"


class SecurityPolicyRelationType(str, Enum):
    DIRECT = "DIRECT"
    INHERITED = "INHERITED"
    INHERITED_ONLY = "INHERITED_ONLY"


class SecurityReportTypeEnum(str, Enum):
    SAST = "SAST"
    SAST_IAC = "SAST_IAC"
    BREACH_AND_ATTACK_SIMULATION = "BREACH_AND_ATTACK_SIMULATION"
    DAST = "DAST"
    DEPENDENCY_SCANNING = "DEPENDENCY_SCANNING"
    CONTAINER_SCANNING = "CONTAINER_SCANNING"
    SECRET_DETECTION = "SECRET_DETECTION"
    COVERAGE_FUZZING = "COVERAGE_FUZZING"
    API_FUZZING = "API_FUZZING"
    CLUSTER_IMAGE_SCANNING = "CLUSTER_IMAGE_SCANNING"


class SecurityScannerType(str, Enum):
    SAST = "SAST"
    SAST_IAC = "SAST_IAC"
    BREACH_AND_ATTACK_SIMULATION = "BREACH_AND_ATTACK_SIMULATION"
    DAST = "DAST"
    DEPENDENCY_SCANNING = "DEPENDENCY_SCANNING"
    CONTAINER_SCANNING = "CONTAINER_SCANNING"
    SECRET_DETECTION = "SECRET_DETECTION"
    COVERAGE_FUZZING = "COVERAGE_FUZZING"
    API_FUZZING = "API_FUZZING"
    CLUSTER_IMAGE_SCANNING = "CLUSTER_IMAGE_SCANNING"


class SentryErrorStatus(str, Enum):
    RESOLVED = "RESOLVED"
    RESOLVED_IN_NEXT_RELEASE = "RESOLVED_IN_NEXT_RELEASE"
    UNRESOLVED = "UNRESOLVED"
    IGNORED = "IGNORED"


class ServiceType(str, Enum):
    APPLE_APP_STORE_SERVICE = "APPLE_APP_STORE_SERVICE"
    ASANA_SERVICE = "ASANA_SERVICE"
    ASSEMBLA_SERVICE = "ASSEMBLA_SERVICE"
    BAMBOO_SERVICE = "BAMBOO_SERVICE"
    BUGZILLA_SERVICE = "BUGZILLA_SERVICE"
    BUILDKITE_SERVICE = "BUILDKITE_SERVICE"
    CAMPFIRE_SERVICE = "CAMPFIRE_SERVICE"
    CLICKUP_SERVICE = "CLICKUP_SERVICE"
    CONFLUENCE_SERVICE = "CONFLUENCE_SERVICE"
    CUSTOM_ISSUE_TRACKER_SERVICE = "CUSTOM_ISSUE_TRACKER_SERVICE"
    DATADOG_SERVICE = "DATADOG_SERVICE"
    DISCORD_SERVICE = "DISCORD_SERVICE"
    DRONE_CI_SERVICE = "DRONE_CI_SERVICE"
    EMAILS_ON_PUSH_SERVICE = "EMAILS_ON_PUSH_SERVICE"
    EWM_SERVICE = "EWM_SERVICE"
    EXTERNAL_WIKI_SERVICE = "EXTERNAL_WIKI_SERVICE"
    GITHUB_SERVICE = "GITHUB_SERVICE"
    GITLAB_SLACK_APPLICATION_SERVICE = "GITLAB_SLACK_APPLICATION_SERVICE"
    GOOGLE_PLAY_SERVICE = "GOOGLE_PLAY_SERVICE"
    HANGOUTS_CHAT_SERVICE = "HANGOUTS_CHAT_SERVICE"
    HARBOR_SERVICE = "HARBOR_SERVICE"
    IRKER_SERVICE = "IRKER_SERVICE"
    JENKINS_SERVICE = "JENKINS_SERVICE"
    JIRA_SERVICE = "JIRA_SERVICE"
    MATTERMOST_SERVICE = "MATTERMOST_SERVICE"
    MATTERMOST_SLASH_COMMANDS_SERVICE = "MATTERMOST_SLASH_COMMANDS_SERVICE"
    MICROSOFT_TEAMS_SERVICE = "MICROSOFT_TEAMS_SERVICE"
    PACKAGIST_SERVICE = "PACKAGIST_SERVICE"
    PIPELINES_EMAIL_SERVICE = "PIPELINES_EMAIL_SERVICE"
    PIVOTALTRACKER_SERVICE = "PIVOTALTRACKER_SERVICE"
    PROMETHEUS_SERVICE = "PROMETHEUS_SERVICE"
    PUMBLE_SERVICE = "PUMBLE_SERVICE"
    PUSHOVER_SERVICE = "PUSHOVER_SERVICE"
    REDMINE_SERVICE = "REDMINE_SERVICE"
    SHIMO_SERVICE = "SHIMO_SERVICE"
    SLACK_SERVICE = "SLACK_SERVICE"
    SLACK_SLASH_COMMANDS_SERVICE = "SLACK_SLASH_COMMANDS_SERVICE"
    SQUASH_TM_SERVICE = "SQUASH_TM_SERVICE"
    TEAMCITY_SERVICE = "TEAMCITY_SERVICE"
    TELEGRAM_SERVICE = "TELEGRAM_SERVICE"
    UNIFY_CIRCUIT_SERVICE = "UNIFY_CIRCUIT_SERVICE"
    WEBEX_TEAMS_SERVICE = "WEBEX_TEAMS_SERVICE"
    YOUTRACK_SERVICE = "YOUTRACK_SERVICE"
    ZENTAO_SERVICE = "ZENTAO_SERVICE"


class ShaFormat(str, Enum):
    SHORT = "SHORT"
    LONG = "LONG"


class SharedRunnersSetting(str, Enum):
    DISABLED_AND_UNOVERRIDABLE = "DISABLED_AND_UNOVERRIDABLE"
    DISABLED_AND_OVERRIDABLE = "DISABLED_AND_OVERRIDABLE"
    ENABLED = "ENABLED"
    DISABLED_WITH_OVERRIDE = "DISABLED_WITH_OVERRIDE"


class SnippetBlobActionEnum(str, Enum):
    create = "create"
    update = "update"
    delete = "delete"
    move = "move"


class Sort(str, Enum):
    updated_desc = "updated_desc"
    updated_asc = "updated_asc"
    created_desc = "created_desc"
    created_asc = "created_asc"
    UPDATED_DESC = "UPDATED_DESC"
    UPDATED_ASC = "UPDATED_ASC"
    CREATED_DESC = "CREATED_DESC"
    CREATED_ASC = "CREATED_ASC"


class SortDirectionEnum(str, Enum):
    ASC = "ASC"
    DESC = "DESC"


class TestCaseStatus(str, Enum):
    error = "error"
    failed = "failed"
    success = "success"
    skipped = "skipped"


class TestReportState(str, Enum):
    PASSED = "PASSED"
    FAILED = "FAILED"


class TimeboxReportErrorReason(str, Enum):
    UNSUPPORTED = "UNSUPPORTED"
    MISSING_DATES = "MISSING_DATES"
    TOO_MANY_EVENTS = "TOO_MANY_EVENTS"
    PRIORITY_ASC = "PRIORITY_ASC"
    PRIORITY_DESC = "PRIORITY_DESC"
    LABEL_PRIORITY_ASC = "LABEL_PRIORITY_ASC"
    LABEL_PRIORITY_DESC = "LABEL_PRIORITY_DESC"
    MILESTONE_DUE_ASC = "MILESTONE_DUE_ASC"
    MILESTONE_DUE_DESC = "MILESTONE_DUE_DESC"
    updated_desc = "updated_desc"
    updated_asc = "updated_asc"
    created_desc = "created_desc"
    created_asc = "created_asc"
    UPDATED_DESC = "UPDATED_DESC"
    UPDATED_ASC = "UPDATED_ASC"
    CREATED_DESC = "CREATED_DESC"
    CREATED_ASC = "CREATED_ASC"


class TimelogSort(str, Enum):
    SPENT_AT_ASC = "SPENT_AT_ASC"
    SPENT_AT_DESC = "SPENT_AT_DESC"
    TIME_SPENT_ASC = "TIME_SPENT_ASC"
    TIME_SPENT_DESC = "TIME_SPENT_DESC"
    updated_desc = "updated_desc"
    updated_asc = "updated_asc"
    created_desc = "created_desc"
    created_asc = "created_asc"
    UPDATED_DESC = "UPDATED_DESC"
    UPDATED_ASC = "UPDATED_ASC"
    CREATED_DESC = "CREATED_DESC"
    CREATED_ASC = "CREATED_ASC"


class TodoActionEnum(str, Enum):
    assigned = "assigned"
    mentioned = "mentioned"
    build_failed = "build_failed"
    marked = "marked"
    approval_required = "approval_required"
    unmergeable = "unmergeable"
    directly_addressed = "directly_addressed"
    merge_train_removed = "merge_train_removed"
    review_requested = "review_requested"
    member_access_requested = "member_access_requested"
    review_submitted = "review_submitted"


class TodoStateEnum(str, Enum):
    pending = "pending"
    done = "done"


class TodoTargetEnum(str, Enum):
    COMMIT = "COMMIT"
    ISSUE = "ISSUE"
    WORKITEM = "WORKITEM"
    MERGEREQUEST = "MERGEREQUEST"
    DESIGN = "DESIGN"
    ALERT = "ALERT"
    EPIC = "EPIC"


class TrainingUrlRequestStatus(str, Enum):
    PENDING = "PENDING"
    COMPLETED = "COMPLETED"


class TypeEnum(str, Enum):
    personal = "personal"
    project = "project"


class UserCalloutFeatureNameEnum(str, Enum):
    GKE_CLUSTER_INTEGRATION = "GKE_CLUSTER_INTEGRATION"
    GCP_SIGNUP_OFFER = "GCP_SIGNUP_OFFER"
    CLUSTER_SECURITY_WARNING = "CLUSTER_SECURITY_WARNING"
    ULTIMATE_TRIAL = "ULTIMATE_TRIAL"
    GEO_ENABLE_HASHED_STORAGE = "GEO_ENABLE_HASHED_STORAGE"
    GEO_MIGRATE_HASHED_STORAGE = "GEO_MIGRATE_HASHED_STORAGE"
    CANARY_DEPLOYMENT = "CANARY_DEPLOYMENT"
    GOLD_TRIAL_BILLINGS = "GOLD_TRIAL_BILLINGS"
    SUGGEST_POPOVER_DISMISSED = "SUGGEST_POPOVER_DISMISSED"
    TABS_POSITION_HIGHLIGHT = "TABS_POSITION_HIGHLIGHT"
    THREAT_MONITORING_INFO = "THREAT_MONITORING_INFO"
    TWO_FACTOR_AUTH_RECOVERY_SETTINGS_CHECK = "TWO_FACTOR_AUTH_RECOVERY_SETTINGS_CHECK"
    WEB_IDE_ALERT_DISMISSED = "WEB_IDE_ALERT_DISMISSED"
    ACTIVE_USER_COUNT_THRESHOLD = "ACTIVE_USER_COUNT_THRESHOLD"
    BUY_PIPELINE_MINUTES_NOTIFICATION_DOT = "BUY_PIPELINE_MINUTES_NOTIFICATION_DOT"
    PERSONAL_ACCESS_TOKEN_EXPIRY = "PERSONAL_ACCESS_TOKEN_EXPIRY"
    SUGGEST_PIPELINE = "SUGGEST_PIPELINE"
    FEATURE_FLAGS_NEW_VERSION = "FEATURE_FLAGS_NEW_VERSION"
    REGISTRATION_ENABLED_CALLOUT = "REGISTRATION_ENABLED_CALLOUT"
    NEW_USER_SIGNUPS_CAP_REACHED = "NEW_USER_SIGNUPS_CAP_REACHED"
    UNFINISHED_TAG_CLEANUP_CALLOUT = "UNFINISHED_TAG_CLEANUP_CALLOUT"
    EOA_BRONZE_PLAN_BANNER = "EOA_BRONZE_PLAN_BANNER"
    PIPELINE_NEEDS_BANNER = "PIPELINE_NEEDS_BANNER"
    PIPELINE_NEEDS_HOVER_TIP = "PIPELINE_NEEDS_HOVER_TIP"
    WEB_IDE_CI_ENVIRONMENTS_GUIDANCE = "WEB_IDE_CI_ENVIRONMENTS_GUIDANCE"
    SECURITY_CONFIGURATION_UPGRADE_BANNER = "SECURITY_CONFIGURATION_UPGRADE_BANNER"
    CLOUD_LICENSING_SUBSCRIPTION_ACTIVATION_BANNER = "CLOUD_LICENSING_SUBSCRIPTION_ACTIVATION_BANNER"
    TRIAL_STATUS_REMINDER_D14 = "TRIAL_STATUS_REMINDER_D14"
    TRIAL_STATUS_REMINDER_D3 = "TRIAL_STATUS_REMINDER_D3"
    SECURITY_CONFIGURATION_DEVOPS_ALERT = "SECURITY_CONFIGURATION_DEVOPS_ALERT"
    PROFILE_PERSONAL_ACCESS_TOKEN_EXPIRY = "PROFILE_PERSONAL_ACCESS_TOKEN_EXPIRY"
    TERRAFORM_NOTIFICATION_DISMISSED = "TERRAFORM_NOTIFICATION_DISMISSED"
    SECURITY_NEWSLETTER_CALLOUT = "SECURITY_NEWSLETTER_CALLOUT"
    VERIFICATION_REMINDER = "VERIFICATION_REMINDER"
    CI_DEPRECATION_WARNING_FOR_TYPES_KEYWORD = "CI_DEPRECATION_WARNING_FOR_TYPES_KEYWORD"
    SECURITY_TRAINING_FEATURE_PROMOTION = "SECURITY_TRAINING_FEATURE_PROMOTION"
    NAMESPACE_STORAGE_PRE_ENFORCEMENT_BANNER = "NAMESPACE_STORAGE_PRE_ENFORCEMENT_BANNER"
    PREVIEW_USER_OVER_LIMIT_FREE_PLAN_ALERT = "PREVIEW_USER_OVER_LIMIT_FREE_PLAN_ALERT"
    USER_REACHED_LIMIT_FREE_PLAN_ALERT = "USER_REACHED_LIMIT_FREE_PLAN_ALERT"
    SUBMIT_LICENSE_USAGE_DATA_BANNER = "SUBMIT_LICENSE_USAGE_DATA_BANNER"
    PERSONAL_PROJECT_LIMITATIONS_BANNER = "PERSONAL_PROJECT_LIMITATIONS_BANNER"
    MR_EXPERIENCE_SURVEY = "MR_EXPERIENCE_SURVEY"
    NAMESPACE_STORAGE_LIMIT_ALERT_WARNING_THRESHOLD = "NAMESPACE_STORAGE_LIMIT_ALERT_WARNING_THRESHOLD"
    NAMESPACE_STORAGE_LIMIT_ALERT_ALERT_THRESHOLD = "NAMESPACE_STORAGE_LIMIT_ALERT_ALERT_THRESHOLD"
    NAMESPACE_STORAGE_LIMIT_ALERT_ERROR_THRESHOLD = "NAMESPACE_STORAGE_LIMIT_ALERT_ERROR_THRESHOLD"
    PROJECT_QUALITY_SUMMARY_FEEDBACK = "PROJECT_QUALITY_SUMMARY_FEEDBACK"
    MERGE_REQUEST_SETTINGS_MOVED_CALLOUT = "MERGE_REQUEST_SETTINGS_MOVED_CALLOUT"
    NEW_TOP_LEVEL_GROUP_ALERT = "NEW_TOP_LEVEL_GROUP_ALERT"
    ARTIFACTS_MANAGEMENT_PAGE_FEEDBACK_BANNER = "ARTIFACTS_MANAGEMENT_PAGE_FEEDBACK_BANNER"
    BRANCH_RULES_INFO_CALLOUT = "BRANCH_RULES_INFO_CALLOUT"
    CREATE_RUNNER_WORKFLOW_BANNER = "CREATE_RUNNER_WORKFLOW_BANNER"
    PROJECT_REPOSITORY_LIMIT_ALERT_WARNING_THRESHOLD = "PROJECT_REPOSITORY_LIMIT_ALERT_WARNING_THRESHOLD"
    PROJECT_REPOSITORY_LIMIT_ALERT_ALERT_THRESHOLD = "PROJECT_REPOSITORY_LIMIT_ALERT_ALERT_THRESHOLD"
    PROJECT_REPOSITORY_LIMIT_ALERT_ERROR_THRESHOLD = "PROJECT_REPOSITORY_LIMIT_ALERT_ERROR_THRESHOLD"
    NEW_NAVIGATION_CALLOUT = "NEW_NAVIGATION_CALLOUT"
    NAMESPACE_OVER_STORAGE_USERS_COMBINED_ALERT = "NAMESPACE_OVER_STORAGE_USERS_COMBINED_ALERT"
    RICH_TEXT_EDITOR = "RICH_TEXT_EDITOR"


class UserState(str, Enum):
    active = "active"
    blocked = "blocked"
    deactivated = "deactivated"


class ValueStreamDashboardMetric(str, Enum):
    PROJECTS = "PROJECTS"
    ISSUES = "ISSUES"
    GROUPS = "GROUPS"
    MERGE_REQUESTS = "MERGE_REQUESTS"
    PIPELINES = "PIPELINES"


class VerificationStateEnum(str, Enum):
    PENDING = "PENDING"
    STARTED = "STARTED"
    SUCCEEDED = "SUCCEEDED"
    FAILED = "FAILED"
    DISABLED = "DISABLED"


class VerificationStatus(str, Enum):
    UNVERIFIED = "UNVERIFIED"
    VERIFIED = "VERIFIED"
    SAME_USER_DIFFERENT_EMAIL = "SAME_USER_DIFFERENT_EMAIL"
    OTHER_USER = "OTHER_USER"
    UNVERIFIED_KEY = "UNVERIFIED_KEY"
    UNKNOWN_KEY = "UNKNOWN_KEY"
    MULTIPLE_SIGNATURES = "MULTIPLE_SIGNATURES"
    REVOKED_KEY = "REVOKED_KEY"
    VERIFIED_SYSTEM = "VERIFIED_SYSTEM"


class VisibilityLevelsEnum(str, Enum):
    private = "private"
    internal = "internal"
    public = "public"


class VisibilityPipelineIdType(str, Enum):
    ID = "ID"
    IID = "IID"


class VisibilityScopesEnum(str, Enum):
    private = "private"
    internal = "internal"
    public = "public"


class VulnerabilityConfidence(str, Enum):
    IGNORE = "IGNORE"
    UNKNOWN = "UNKNOWN"
    EXPERIMENTAL = "EXPERIMENTAL"
    LOW = "LOW"
    MEDIUM = "MEDIUM"
    HIGH = "HIGH"
    CONFIRMED = "CONFIRMED"


class VulnerabilityDismissalReason(str, Enum):
    ACCEPTABLE_RISK = "ACCEPTABLE_RISK"
    FALSE_POSITIVE = "FALSE_POSITIVE"
    MITIGATING_CONTROL = "MITIGATING_CONTROL"
    USED_IN_TESTS = "USED_IN_TESTS"
    NOT_APPLICABLE = "NOT_APPLICABLE"


class VulnerabilityExternalIssueLinkExternalTracker(str, Enum):
    JIRA = "JIRA"


class VulnerabilityExternalIssueLinkType(str, Enum):
    CREATED = "CREATED"


class VulnerabilityGrade(str, Enum):
    A = "A"
    B = "B"
    C = "C"
    D = "D"
    F = "F"


class VulnerabilityIssueLinkType(str, Enum):
    RELATED = "RELATED"
    CREATED = "CREATED"


class VulnerabilityReportType(str, Enum):
    SAST = "SAST"
    DEPENDENCY_SCANNING = "DEPENDENCY_SCANNING"
    CONTAINER_SCANNING = "CONTAINER_SCANNING"
    DAST = "DAST"
    SECRET_DETECTION = "SECRET_DETECTION"
    COVERAGE_FUZZING = "COVERAGE_FUZZING"
    API_FUZZING = "API_FUZZING"
    CLUSTER_IMAGE_SCANNING = "CLUSTER_IMAGE_SCANNING"
    GENERIC = "GENERIC"


class VulnerabilitySeverity(str, Enum):
    INFO = "INFO"
    UNKNOWN = "UNKNOWN"
    LOW = "LOW"
    MEDIUM = "MEDIUM"
    HIGH = "HIGH"
    CRITICAL = "CRITICAL"


class VulnerabilitySort(str, Enum):
    severity_desc = "severity_desc"
    severity_asc = "severity_asc"
    detected_desc = "detected_desc"
    detected_asc = "detected_asc"


class VulnerabilityState(str, Enum):
    CONFIRMED = "CONFIRMED"
    DETECTED = "DETECTED"
    DISMISSED = "DISMISSED"
    RESOLVED = "RESOLVED"


class WeightWildcardId(str, Enum):
    NONE = "NONE"
    ANY = "ANY"


class WorkItemAwardEmojiUpdateAction(str, Enum):
    ADD = "ADD"
    REMOVE = "REMOVE"


class WorkItemRelatedLinkType(str, Enum):
    RELATED = "RELATED"
    BLOCKED_BY = "BLOCKED_BY"
    BLOCKS = "BLOCKS"


class WorkItemSort(str, Enum):
    TITLE_ASC = "TITLE_ASC"
    TITLE_DESC = "TITLE_DESC"
    updated_desc = "updated_desc"
    updated_asc = "updated_asc"
    created_desc = "created_desc"
    created_asc = "created_asc"
    UPDATED_DESC = "UPDATED_DESC"
    UPDATED_ASC = "UPDATED_ASC"
    CREATED_DESC = "CREATED_DESC"
    CREATED_ASC = "CREATED_ASC"


class WorkItemState(str, Enum):
    OPEN = "OPEN"
    CLOSED = "CLOSED"


class WorkItemStateEvent(str, Enum):
    REOPEN = "REOPEN"
    CLOSE = "CLOSE"


class WorkItemTodoUpdateAction(str, Enum):
    MARK_AS_DONE = "MARK_AS_DONE"
    ADD = "ADD"


class WorkItemWidgetType(str, Enum):
    ASSIGNEES = "ASSIGNEES"
    DESCRIPTION = "DESCRIPTION"
    HIERARCHY = "HIERARCHY"
    LABELS = "LABELS"
    MILESTONE = "MILESTONE"
    NOTES = "NOTES"
    START_AND_DUE_DATE = "START_AND_DUE_DATE"
    HEALTH_STATUS = "HEALTH_STATUS"
    WEIGHT = "WEIGHT"
    ITERATION = "ITERATION"
    PROGRESS = "PROGRESS"
    STATUS = "STATUS"
    REQUIREMENT_LEGACY = "REQUIREMENT_LEGACY"
    TEST_REPORTS = "TEST_REPORTS"
    NOTIFICATIONS = "NOTIFICATIONS"
    CURRENT_USER_TODOS = "CURRENT_USER_TODOS"
    AWARD_EMOJI = "AWARD_EMOJI"
    LINKED_ITEMS = "LINKED_ITEMS"
